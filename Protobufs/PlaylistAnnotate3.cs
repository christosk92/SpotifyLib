// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: playlist_annotate3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SpotifyPlaylistAnnotate3.Proto {

  /// <summary>Holder for reflection information generated from playlist_annotate3.proto</summary>
  public static partial class PlaylistAnnotate3Reflection {

    #region Descriptor
    /// <summary>File descriptor for playlist_annotate3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlaylistAnnotate3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhwbGF5bGlzdF9hbm5vdGF0ZTMucHJvdG8SIHNwb3RpZnlfcGxheWxpc3Rf",
            "YW5ub3RhdGUzLnByb3RvImEKD1Rha2Vkb3duUmVxdWVzdBJOChJhYnVzZV9y",
            "ZXBvcnRfc3RhdGUYASABKA4yMi5zcG90aWZ5X3BsYXlsaXN0X2Fubm90YXRl",
            "My5wcm90by5BYnVzZVJlcG9ydFN0YXRlIjkKD0Fubm90YXRlUmVxdWVzdBIT",
            "CgtkZXNjcmlwdGlvbhgBIAEoCRIRCglpbWFnZV91cmkYAiABKAkiNQoRVHJh",
            "bnNjb2RlZFBpY3R1cmUSEwoLdGFyZ2V0X25hbWUYASABKAkSCwoDdXJpGAIg",
            "ASgJIvQCChJQbGF5bGlzdEFubm90YXRpb24SEwoLZGVzY3JpcHRpb24YASAB",
            "KAkSDwoHcGljdHVyZRgCIAEoCRJpChpkZXByZWNhdGVkX3JlbmRlcl9mZWF0",
            "dXJlcxgDIAEoDjIwLnNwb3RpZnlfcGxheWxpc3RfYW5ub3RhdGUzLnByb3Rv",
            "LlJlbmRlckZlYXR1cmVzOg9OT1JNQUxfRkVBVFVSRVNCAhgBEk8KEnRyYW5z",
            "Y29kZWRfcGljdHVyZRgEIAMoCzIzLnNwb3RpZnlfcGxheWxpc3RfYW5ub3Rh",
            "dGUzLnByb3RvLlRyYW5zY29kZWRQaWN0dXJlEigKGmlzX2FidXNlX3JlcG9y",
            "dGluZ19lbmFibGVkGAYgASgIOgR0cnVlElIKEmFidXNlX3JlcG9ydF9zdGF0",
            "ZRgHIAEoDjIyLnNwb3RpZnlfcGxheWxpc3RfYW5ub3RhdGUzLnByb3RvLkFi",
            "dXNlUmVwb3J0U3RhdGU6Ak9LKjwKDlJlbmRlckZlYXR1cmVzEhMKD05PUk1B",
            "TF9GRUFUVVJFUxABEhUKEUVYVEVOREVEX0ZFQVRVUkVTEAIqKgoQQWJ1c2VS",
            "ZXBvcnRTdGF0ZRIGCgJPSxAAEg4KClRBS0VOX0RPV04QAUIiCh5jb20uc3Bv",
            "dGlmeS5wbGF5bGlzdF9hbm5vdGF0ZTNIAg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures), typeof(global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SpotifyPlaylistAnnotate3.Proto.TakedownRequest), global::SpotifyPlaylistAnnotate3.Proto.TakedownRequest.Parser, new[]{ "AbuseReportState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpotifyPlaylistAnnotate3.Proto.AnnotateRequest), global::SpotifyPlaylistAnnotate3.Proto.AnnotateRequest.Parser, new[]{ "Description", "ImageUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture), global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture.Parser, new[]{ "TargetName", "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SpotifyPlaylistAnnotate3.Proto.PlaylistAnnotation), global::SpotifyPlaylistAnnotate3.Proto.PlaylistAnnotation.Parser, new[]{ "Description", "Picture", "DeprecatedRenderFeatures", "TranscodedPicture", "IsAbuseReportingEnabled", "AbuseReportState" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RenderFeatures {
    [pbr::OriginalName("NORMAL_FEATURES")] NormalFeatures = 1,
    [pbr::OriginalName("EXTENDED_FEATURES")] ExtendedFeatures = 2,
  }

  public enum AbuseReportState {
    [pbr::OriginalName("OK")] Ok = 0,
    [pbr::OriginalName("TAKEN_DOWN")] TakenDown = 1,
  }

  #endregion

  #region Messages
  public sealed partial class TakedownRequest : pb::IMessage<TakedownRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TakedownRequest> _parser = new pb::MessageParser<TakedownRequest>(() => new TakedownRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TakedownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpotifyPlaylistAnnotate3.Proto.PlaylistAnnotate3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakedownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakedownRequest(TakedownRequest other) : this() {
      _hasBits0 = other._hasBits0;
      abuseReportState_ = other.abuseReportState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakedownRequest Clone() {
      return new TakedownRequest(this);
    }

    /// <summary>Field number for the "abuse_report_state" field.</summary>
    public const int AbuseReportStateFieldNumber = 1;
    private readonly static global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState AbuseReportStateDefaultValue = global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState.Ok;

    private global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState abuseReportState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState AbuseReportState {
      get { if ((_hasBits0 & 1) != 0) { return abuseReportState_; } else { return AbuseReportStateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        abuseReportState_ = value;
      }
    }
    /// <summary>Gets whether the "abuse_report_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAbuseReportState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "abuse_report_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAbuseReportState() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TakedownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TakedownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbuseReportState != other.AbuseReportState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAbuseReportState) hash ^= AbuseReportState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAbuseReportState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AbuseReportState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAbuseReportState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AbuseReportState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAbuseReportState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AbuseReportState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TakedownRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAbuseReportState) {
        AbuseReportState = other.AbuseReportState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AbuseReportState = (global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AbuseReportState = (global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnnotateRequest : pb::IMessage<AnnotateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnnotateRequest> _parser = new pb::MessageParser<AnnotateRequest>(() => new AnnotateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpotifyPlaylistAnnotate3.Proto.PlaylistAnnotate3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateRequest(AnnotateRequest other) : this() {
      description_ = other.description_;
      imageUri_ = other.imageUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotateRequest Clone() {
      return new AnnotateRequest(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "image_uri" field.</summary>
    public const int ImageUriFieldNumber = 2;
    private readonly static string ImageUriDefaultValue = "";

    private string imageUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUri {
      get { return imageUri_ ?? ImageUriDefaultValue; }
      set {
        imageUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image_uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImageUri {
      get { return imageUri_ != null; }
    }
    /// <summary>Clears the value of the "image_uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImageUri() {
      imageUri_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (ImageUri != other.ImageUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasImageUri) hash ^= ImageUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasImageUri) {
        output.WriteRawTag(18);
        output.WriteString(ImageUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasImageUri) {
        output.WriteRawTag(18);
        output.WriteString(ImageUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasImageUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasImageUri) {
        ImageUri = other.ImageUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            ImageUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            ImageUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TranscodedPicture : pb::IMessage<TranscodedPicture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscodedPicture> _parser = new pb::MessageParser<TranscodedPicture>(() => new TranscodedPicture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranscodedPicture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpotifyPlaylistAnnotate3.Proto.PlaylistAnnotate3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranscodedPicture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranscodedPicture(TranscodedPicture other) : this() {
      targetName_ = other.targetName_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranscodedPicture Clone() {
      return new TranscodedPicture(this);
    }

    /// <summary>Field number for the "target_name" field.</summary>
    public const int TargetNameFieldNumber = 1;
    private readonly static string TargetNameDefaultValue = "";

    private string targetName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetName {
      get { return targetName_ ?? TargetNameDefaultValue; }
      set {
        targetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "target_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetName {
      get { return targetName_ != null; }
    }
    /// <summary>Clears the value of the "target_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetName() {
      targetName_ = null;
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranscodedPicture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranscodedPicture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetName != other.TargetName) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetName) hash ^= TargetName.GetHashCode();
      if (HasUri) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTargetName) {
        output.WriteRawTag(10);
        output.WriteString(TargetName);
      }
      if (HasUri) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTargetName) {
        output.WriteRawTag(10);
        output.WriteString(TargetName);
      }
      if (HasUri) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetName);
      }
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranscodedPicture other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetName) {
        TargetName = other.TargetName;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TargetName = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TargetName = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlaylistAnnotation : pb::IMessage<PlaylistAnnotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlaylistAnnotation> _parser = new pb::MessageParser<PlaylistAnnotation>(() => new PlaylistAnnotation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaylistAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SpotifyPlaylistAnnotate3.Proto.PlaylistAnnotate3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaylistAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaylistAnnotation(PlaylistAnnotation other) : this() {
      _hasBits0 = other._hasBits0;
      description_ = other.description_;
      picture_ = other.picture_;
      deprecatedRenderFeatures_ = other.deprecatedRenderFeatures_;
      transcodedPicture_ = other.transcodedPicture_.Clone();
      isAbuseReportingEnabled_ = other.isAbuseReportingEnabled_;
      abuseReportState_ = other.abuseReportState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaylistAnnotation Clone() {
      return new PlaylistAnnotation(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 2;
    private readonly static string PictureDefaultValue = "";

    private string picture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Picture {
      get { return picture_ ?? PictureDefaultValue; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "picture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPicture {
      get { return picture_ != null; }
    }
    /// <summary>Clears the value of the "picture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPicture() {
      picture_ = null;
    }

    /// <summary>Field number for the "deprecated_render_features" field.</summary>
    public const int DeprecatedRenderFeaturesFieldNumber = 3;
    private readonly static global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures DeprecatedRenderFeaturesDefaultValue = global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures.NormalFeatures;

    private global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures deprecatedRenderFeatures_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures DeprecatedRenderFeatures {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedRenderFeatures_; } else { return DeprecatedRenderFeaturesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedRenderFeatures_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_render_features" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeprecatedRenderFeatures {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_render_features" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeprecatedRenderFeatures() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "transcoded_picture" field.</summary>
    public const int TranscodedPictureFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture> _repeated_transcodedPicture_codec
        = pb::FieldCodec.ForMessage(34, global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture.Parser);
    private readonly pbc::RepeatedField<global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture> transcodedPicture_ = new pbc::RepeatedField<global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SpotifyPlaylistAnnotate3.Proto.TranscodedPicture> TranscodedPicture {
      get { return transcodedPicture_; }
    }

    /// <summary>Field number for the "is_abuse_reporting_enabled" field.</summary>
    public const int IsAbuseReportingEnabledFieldNumber = 6;
    private readonly static bool IsAbuseReportingEnabledDefaultValue = true;

    private bool isAbuseReportingEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAbuseReportingEnabled {
      get { if ((_hasBits0 & 2) != 0) { return isAbuseReportingEnabled_; } else { return IsAbuseReportingEnabledDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isAbuseReportingEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "is_abuse_reporting_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsAbuseReportingEnabled {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_abuse_reporting_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsAbuseReportingEnabled() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "abuse_report_state" field.</summary>
    public const int AbuseReportStateFieldNumber = 7;
    private readonly static global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState AbuseReportStateDefaultValue = global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState.Ok;

    private global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState abuseReportState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState AbuseReportState {
      get { if ((_hasBits0 & 4) != 0) { return abuseReportState_; } else { return AbuseReportStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        abuseReportState_ = value;
      }
    }
    /// <summary>Gets whether the "abuse_report_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAbuseReportState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "abuse_report_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAbuseReportState() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaylistAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaylistAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (Picture != other.Picture) return false;
      if (DeprecatedRenderFeatures != other.DeprecatedRenderFeatures) return false;
      if(!transcodedPicture_.Equals(other.transcodedPicture_)) return false;
      if (IsAbuseReportingEnabled != other.IsAbuseReportingEnabled) return false;
      if (AbuseReportState != other.AbuseReportState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasPicture) hash ^= Picture.GetHashCode();
      if (HasDeprecatedRenderFeatures) hash ^= DeprecatedRenderFeatures.GetHashCode();
      hash ^= transcodedPicture_.GetHashCode();
      if (HasIsAbuseReportingEnabled) hash ^= IsAbuseReportingEnabled.GetHashCode();
      if (HasAbuseReportState) hash ^= AbuseReportState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasPicture) {
        output.WriteRawTag(18);
        output.WriteString(Picture);
      }
      if (HasDeprecatedRenderFeatures) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DeprecatedRenderFeatures);
      }
      transcodedPicture_.WriteTo(output, _repeated_transcodedPicture_codec);
      if (HasIsAbuseReportingEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(IsAbuseReportingEnabled);
      }
      if (HasAbuseReportState) {
        output.WriteRawTag(56);
        output.WriteEnum((int) AbuseReportState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDescription) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (HasPicture) {
        output.WriteRawTag(18);
        output.WriteString(Picture);
      }
      if (HasDeprecatedRenderFeatures) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DeprecatedRenderFeatures);
      }
      transcodedPicture_.WriteTo(ref output, _repeated_transcodedPicture_codec);
      if (HasIsAbuseReportingEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(IsAbuseReportingEnabled);
      }
      if (HasAbuseReportState) {
        output.WriteRawTag(56);
        output.WriteEnum((int) AbuseReportState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasPicture) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
      }
      if (HasDeprecatedRenderFeatures) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeprecatedRenderFeatures);
      }
      size += transcodedPicture_.CalculateSize(_repeated_transcodedPicture_codec);
      if (HasIsAbuseReportingEnabled) {
        size += 1 + 1;
      }
      if (HasAbuseReportState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AbuseReportState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaylistAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasPicture) {
        Picture = other.Picture;
      }
      if (other.HasDeprecatedRenderFeatures) {
        DeprecatedRenderFeatures = other.DeprecatedRenderFeatures;
      }
      transcodedPicture_.Add(other.transcodedPicture_);
      if (other.HasIsAbuseReportingEnabled) {
        IsAbuseReportingEnabled = other.IsAbuseReportingEnabled;
      }
      if (other.HasAbuseReportState) {
        AbuseReportState = other.AbuseReportState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            Picture = input.ReadString();
            break;
          }
          case 24: {
            DeprecatedRenderFeatures = (global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures) input.ReadEnum();
            break;
          }
          case 34: {
            transcodedPicture_.AddEntriesFrom(input, _repeated_transcodedPicture_codec);
            break;
          }
          case 48: {
            IsAbuseReportingEnabled = input.ReadBool();
            break;
          }
          case 56: {
            AbuseReportState = (global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            Picture = input.ReadString();
            break;
          }
          case 24: {
            DeprecatedRenderFeatures = (global::SpotifyPlaylistAnnotate3.Proto.RenderFeatures) input.ReadEnum();
            break;
          }
          case 34: {
            transcodedPicture_.AddEntriesFrom(ref input, _repeated_transcodedPicture_codec);
            break;
          }
          case 48: {
            IsAbuseReportingEnabled = input.ReadBool();
            break;
          }
          case 56: {
            AbuseReportState = (global::SpotifyPlaylistAnnotate3.Proto.AbuseReportState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
