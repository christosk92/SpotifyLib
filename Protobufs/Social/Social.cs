// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: social.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spotify.Social {

  /// <summary>Holder for reflection information generated from social.proto</summary>
  public static partial class SocialReflection {

    #region Descriptor
    /// <summary>File descriptor for social.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocialReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxzb2NpYWwucHJvdG8ingEKDkRlY29yYXRpb25EYXRhEhAKCHVzZXJuYW1l",
            "GAEgASgJEhEKCWZ1bGxfbmFtZRgCIAEoCRIRCglpbWFnZV91cmwYAyABKAkS",
            "FwoPbGFyZ2VfaW1hZ2VfdXJsGAUgASgJEhIKCmZpcnN0X25hbWUYBiABKAkS",
            "EQoJbGFzdF9uYW1lGAcgASgJEhQKDGZhY2Vib29rX3VpZBgIIAEoCUIRqgIO",
            "U3BvdGlmeS5Tb2NpYWw="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.Social.DecorationData), global::Spotify.Social.DecorationData.Parser, new[]{ "Username", "FullName", "ImageUrl", "LargeImageUrl", "FirstName", "LastName", "FacebookUid" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DecorationData : pb::IMessage<DecorationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecorationData> _parser = new pb::MessageParser<DecorationData>(() => new DecorationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecorationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.Social.SocialReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecorationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecorationData(DecorationData other) : this() {
      username_ = other.username_;
      fullName_ = other.fullName_;
      imageUrl_ = other.imageUrl_;
      largeImageUrl_ = other.largeImageUrl_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      facebookUid_ = other.facebookUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecorationData Clone() {
      return new DecorationData(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 2;
    private readonly static string FullNameDefaultValue = "";

    private string fullName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_ ?? FullNameDefaultValue; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "full_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFullName {
      get { return fullName_ != null; }
    }
    /// <summary>Clears the value of the "full_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFullName() {
      fullName_ = null;
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 3;
    private readonly static string ImageUrlDefaultValue = "";

    private string imageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_ ?? ImageUrlDefaultValue; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "image_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImageUrl {
      get { return imageUrl_ != null; }
    }
    /// <summary>Clears the value of the "image_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImageUrl() {
      imageUrl_ = null;
    }

    /// <summary>Field number for the "large_image_url" field.</summary>
    public const int LargeImageUrlFieldNumber = 5;
    private readonly static string LargeImageUrlDefaultValue = "";

    private string largeImageUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LargeImageUrl {
      get { return largeImageUrl_ ?? LargeImageUrlDefaultValue; }
      set {
        largeImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "large_image_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLargeImageUrl {
      get { return largeImageUrl_ != null; }
    }
    /// <summary>Clears the value of the "large_image_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLargeImageUrl() {
      largeImageUrl_ = null;
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 6;
    private readonly static string FirstNameDefaultValue = "";

    private string firstName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_ ?? FirstNameDefaultValue; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "first_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstName {
      get { return firstName_ != null; }
    }
    /// <summary>Clears the value of the "first_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstName() {
      firstName_ = null;
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 7;
    private readonly static string LastNameDefaultValue = "";

    private string lastName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_ ?? LastNameDefaultValue; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "last_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastName {
      get { return lastName_ != null; }
    }
    /// <summary>Clears the value of the "last_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastName() {
      lastName_ = null;
    }

    /// <summary>Field number for the "facebook_uid" field.</summary>
    public const int FacebookUidFieldNumber = 8;
    private readonly static string FacebookUidDefaultValue = "";

    private string facebookUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FacebookUid {
      get { return facebookUid_ ?? FacebookUidDefaultValue; }
      set {
        facebookUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "facebook_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFacebookUid {
      get { return facebookUid_ != null; }
    }
    /// <summary>Clears the value of the "facebook_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFacebookUid() {
      facebookUid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecorationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecorationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (FullName != other.FullName) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (LargeImageUrl != other.LargeImageUrl) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (FacebookUid != other.FacebookUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasFullName) hash ^= FullName.GetHashCode();
      if (HasImageUrl) hash ^= ImageUrl.GetHashCode();
      if (HasLargeImageUrl) hash ^= LargeImageUrl.GetHashCode();
      if (HasFirstName) hash ^= FirstName.GetHashCode();
      if (HasLastName) hash ^= LastName.GetHashCode();
      if (HasFacebookUid) hash ^= FacebookUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasFullName) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (HasImageUrl) {
        output.WriteRawTag(26);
        output.WriteString(ImageUrl);
      }
      if (HasLargeImageUrl) {
        output.WriteRawTag(42);
        output.WriteString(LargeImageUrl);
      }
      if (HasFirstName) {
        output.WriteRawTag(50);
        output.WriteString(FirstName);
      }
      if (HasLastName) {
        output.WriteRawTag(58);
        output.WriteString(LastName);
      }
      if (HasFacebookUid) {
        output.WriteRawTag(66);
        output.WriteString(FacebookUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasFullName) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (HasImageUrl) {
        output.WriteRawTag(26);
        output.WriteString(ImageUrl);
      }
      if (HasLargeImageUrl) {
        output.WriteRawTag(42);
        output.WriteString(LargeImageUrl);
      }
      if (HasFirstName) {
        output.WriteRawTag(50);
        output.WriteString(FirstName);
      }
      if (HasLastName) {
        output.WriteRawTag(58);
        output.WriteString(LastName);
      }
      if (HasFacebookUid) {
        output.WriteRawTag(66);
        output.WriteString(FacebookUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasFullName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (HasImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (HasLargeImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LargeImageUrl);
      }
      if (HasFirstName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (HasLastName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (HasFacebookUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecorationData other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasFullName) {
        FullName = other.FullName;
      }
      if (other.HasImageUrl) {
        ImageUrl = other.ImageUrl;
      }
      if (other.HasLargeImageUrl) {
        LargeImageUrl = other.LargeImageUrl;
      }
      if (other.HasFirstName) {
        FirstName = other.FirstName;
      }
      if (other.HasLastName) {
        LastName = other.LastName;
      }
      if (other.HasFacebookUid) {
        FacebookUid = other.FacebookUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ImageUrl = input.ReadString();
            break;
          }
          case 42: {
            LargeImageUrl = input.ReadString();
            break;
          }
          case 50: {
            FirstName = input.ReadString();
            break;
          }
          case 58: {
            LastName = input.ReadString();
            break;
          }
          case 66: {
            FacebookUid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ImageUrl = input.ReadString();
            break;
          }
          case 42: {
            LargeImageUrl = input.ReadString();
            break;
          }
          case 50: {
            FirstName = input.ReadString();
            break;
          }
          case 58: {
            LastName = input.ReadString();
            break;
          }
          case 66: {
            FacebookUid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
