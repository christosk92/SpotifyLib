// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authentication.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spotify {

  /// <summary>Holder for reflection information generated from authentication.proto</summary>
  public static partial class AuthenticationReflection {

    #region Descriptor
    /// <summary>File descriptor for authentication.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthenticationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRhdXRoZW50aWNhdGlvbi5wcm90bxIHc3BvdGlmeSKiAwoXQ2xpZW50UmVz",
            "cG9uc2VFbmNyeXB0ZWQSNAoRbG9naW5fY3JlZGVudGlhbHMYCiACKAsyGS5z",
            "cG90aWZ5LkxvZ2luQ3JlZGVudGlhbHMSMgoQYWNjb3VudF9jcmVhdGlvbhgU",
            "IAEoDjIYLnNwb3RpZnkuQWNjb3VudENyZWF0aW9uEj8KFGZpbmdlcnByaW50",
            "X3Jlc3BvbnNlGB4gASgLMiEuc3BvdGlmeS5GaW5nZXJwcmludFJlc3BvbnNl",
            "VW5pb24SLQoLcGVlcl90aWNrZXQYKCABKAsyGC5zcG90aWZ5LlBlZXJUaWNr",
            "ZXRVbmlvbhIoCgtzeXN0ZW1faW5mbxgyIAIoCzITLnNwb3RpZnkuU3lzdGVt",
            "SW5mbxIWCg5wbGF0Zm9ybV9tb2RlbBg8IAEoCRIWCg52ZXJzaW9uX3N0cmlu",
            "ZxhGIAEoCRIpCgZhcHBrZXkYUCABKAsyGS5zcG90aWZ5LkxpYnNwb3RpZnlB",
            "cHBLZXkSKAoLY2xpZW50X2luZm8YWiABKAsyEy5zcG90aWZ5LkNsaWVudElu",
            "Zm8iYQoQTG9naW5DcmVkZW50aWFscxIQCgh1c2VybmFtZRgKIAEoCRIoCgN0",
            "eXAYFCACKA4yGy5zcG90aWZ5LkF1dGhlbnRpY2F0aW9uVHlwZRIRCglhdXRo",
            "X2RhdGEYHiABKAwiiQEKGEZpbmdlcnByaW50UmVzcG9uc2VVbmlvbhIwCgVn",
            "cmFpbhgKIAEoCzIhLnNwb3RpZnkuRmluZ2VycHJpbnRHcmFpblJlc3BvbnNl",
            "EjsKC2htYWNfcmlwZW1kGBQgASgLMiYuc3BvdGlmeS5GaW5nZXJwcmludEht",
            "YWNSaXBlbWRSZXNwb25zZSIxChhGaW5nZXJwcmludEdyYWluUmVzcG9uc2US",
            "FQoNZW5jcnlwdGVkX2tleRgKIAIoDCItCh1GaW5nZXJwcmludEhtYWNSaXBl",
            "bWRSZXNwb25zZRIMCgRobWFjGAogAigMIm8KD1BlZXJUaWNrZXRVbmlvbhIw",
            "CgpwdWJsaWNfa2V5GAogASgLMhwuc3BvdGlmeS5QZWVyVGlja2V0UHVibGlj",
            "S2V5EioKCm9sZF90aWNrZXQYFCABKAsyFi5zcG90aWZ5LlBlZXJUaWNrZXRP",
            "bGQiKQoTUGVlclRpY2tldFB1YmxpY0tleRISCgpwdWJsaWNfa2V5GAogAigM",
            "IkMKDVBlZXJUaWNrZXRPbGQSEwoLcGVlcl90aWNrZXQYCiACKAwSHQoVcGVl",
            "cl90aWNrZXRfc2lnbmF0dXJlGBQgAigMIoECCgpTeXN0ZW1JbmZvEiYKCmNw",
            "dV9mYW1pbHkYCiACKA4yEi5zcG90aWZ5LkNwdUZhbWlseRITCgtjcHVfc3Vi",
            "dHlwZRgUIAEoDRIPCgdjcHVfZXh0GB4gASgNEh0KBWJyYW5kGCggASgOMg4u",
            "c3BvdGlmeS5CcmFuZBITCgticmFuZF9mbGFncxgyIAEoDRIXCgJvcxg8IAIo",
            "DjILLnNwb3RpZnkuT3MSEgoKb3NfdmVyc2lvbhhGIAEoDRIOCgZvc19leHQY",
            "UCABKA0SIQoZc3lzdGVtX2luZm9ybWF0aW9uX3N0cmluZxhaIAEoCRIRCglk",
            "ZXZpY2VfaWQYZCABKAkicAoQTGlic3BvdGlmeUFwcEtleRIPCgd2ZXJzaW9u",
            "GAEgAigNEg4KBmRldmtleRgCIAIoDBIRCglzaWduYXR1cmUYAyACKAwSEQoJ",
            "dXNlcmFnZW50GAQgAigJEhUKDWNhbGxiYWNrX2hhc2gYBSACKAwiWAoKQ2xp",
            "ZW50SW5mbxIPCgdsaW1pdGVkGAEgASgIEicKAmZiGAIgASgLMhsuc3BvdGlm",
            "eS5DbGllbnRJbmZvRmFjZWJvb2sSEAoIbGFuZ3VhZ2UYAyABKAkiKAoSQ2xp",
            "ZW50SW5mb0ZhY2Vib29rEhIKCm1hY2hpbmVfaWQYASABKAki6QIKCUFQV2Vs",
            "Y29tZRIaChJjYW5vbmljYWxfdXNlcm5hbWUYCiACKAkSNAoWYWNjb3VudF90",
            "eXBlX2xvZ2dlZF9pbhgUIAIoDjIULnNwb3RpZnkuQWNjb3VudFR5cGUSOAoa",
            "Y3JlZGVudGlhbHNfdHlwZV9sb2dnZWRfaW4YGSACKA4yFC5zcG90aWZ5LkFj",
            "Y291bnRUeXBlEkMKHnJldXNhYmxlX2F1dGhfY3JlZGVudGlhbHNfdHlwZRge",
            "IAIoDjIbLnNwb3RpZnkuQXV0aGVudGljYXRpb25UeXBlEiEKGXJldXNhYmxl",
            "X2F1dGhfY3JlZGVudGlhbHMYKCACKAwSEgoKbGZzX3NlY3JldBgyIAEoDBIq",
            "CgxhY2NvdW50X2luZm8YPCABKAsyFC5zcG90aWZ5LkFjY291bnRJbmZvEigK",
            "AmZiGEYgASgLMhwuc3BvdGlmeS5BY2NvdW50SW5mb0ZhY2Vib29rImsKC0Fj",
            "Y291bnRJbmZvEiwKB3Nwb3RpZnkYASABKAsyGy5zcG90aWZ5LkFjY291bnRJ",
            "bmZvU3BvdGlmeRIuCghmYWNlYm9vaxgCIAEoCzIcLnNwb3RpZnkuQWNjb3Vu",
            "dEluZm9GYWNlYm9vayIUChJBY2NvdW50SW5mb1Nwb3RpZnkiPwoTQWNjb3Vu",
            "dEluZm9GYWNlYm9vaxIUCgxhY2Nlc3NfdG9rZW4YASABKAkSEgoKbWFjaGlu",
            "ZV9pZBgCIAEoCSrWAQoSQXV0aGVudGljYXRpb25UeXBlEhwKGEFVVEhFTlRJ",
            "Q0FUSU9OX1VTRVJfUEFTUxAAEi0KKUFVVEhFTlRJQ0FUSU9OX1NUT1JFRF9T",
            "UE9USUZZX0NSRURFTlRJQUxTEAESLgoqQVVUSEVOVElDQVRJT05fU1RPUkVE",
            "X0ZBQ0VCT09LX0NSRURFTlRJQUxTEAISIAocQVVUSEVOVElDQVRJT05fU1BP",
            "VElGWV9UT0tFThADEiEKHUFVVEhFTlRJQ0FUSU9OX0ZBQ0VCT09LX1RPS0VO",
            "EAQqWQoPQWNjb3VudENyZWF0aW9uEiIKHkFDQ09VTlRfQ1JFQVRJT05fQUxX",
            "QVlTX1BST01QVBABEiIKHkFDQ09VTlRfQ1JFQVRJT05fQUxXQVlTX0NSRUFU",
            "RRADKp0BCglDcHVGYW1pbHkSDwoLQ1BVX1VOS05PV04QABILCgdDUFVfWDg2",
            "EAESDgoKQ1BVX1g4Nl82NBACEgsKB0NQVV9QUEMQAxIOCgpDUFVfUFBDXzY0",
            "EAQSCwoHQ1BVX0FSTRAFEgwKCENQVV9JQTY0EAYSCgoGQ1BVX1NIEAcSDAoI",
            "Q1BVX01JUFMQCBIQCgxDUFVfQkxBQ0tGSU4QCSpLCgVCcmFuZBITCg9CUkFO",
            "RF9VTkJSQU5ERUQQABINCglCUkFORF9JTlEQARINCglCUkFORF9IVEMQAhIP",
            "CgtCUkFORF9OT0tJQRADKtECCgJPcxIOCgpPU19VTktOT1dOEAASDgoKT1Nf",
            "V0lORE9XUxABEgoKBk9TX09TWBACEg0KCU9TX0lQSE9ORRADEgoKBk9TX1M2",
            "MBAEEgwKCE9TX0xJTlVYEAUSEQoNT1NfV0lORE9XU19DRRAGEg4KCk9TX0FO",
            "RFJPSUQQBxILCgdPU19QQUxNEAgSDgoKT1NfRlJFRUJTRBAJEhEKDU9TX0JM",
            "QUNLQkVSUlkQChIMCghPU19TT05PUxALEg8KC09TX0xPR0lURUNIEAwSCgoG",
            "T1NfV1A3EA0SDAoIT1NfT05LWU8QDhIOCgpPU19QSElMSVBTEA8SCQoFT1Nf",
            "V0QQEBIMCghPU19WT0xWTxAREgsKB09TX1RJVk8QEhILCgdPU19BV09YEBMS",
            "DAoIT1NfTUVFR08QFBINCglPU19RTlhOVE8QFRIKCgZPU19CQ08QFiooCgtB",
            "Y2NvdW50VHlwZRILCgdTcG90aWZ5EAASDAoIRmFjZWJvb2sQAUINCgtjb20u",
            "c3BvdGlmeQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Spotify.AuthenticationType), typeof(global::Spotify.AccountCreation), typeof(global::Spotify.CpuFamily), typeof(global::Spotify.Brand), typeof(global::Spotify.Os), typeof(global::Spotify.AccountType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.ClientResponseEncrypted), global::Spotify.ClientResponseEncrypted.Parser, new[]{ "LoginCredentials", "AccountCreation", "FingerprintResponse", "PeerTicket", "SystemInfo", "PlatformModel", "VersionString", "Appkey", "ClientInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.LoginCredentials), global::Spotify.LoginCredentials.Parser, new[]{ "Username", "Typ", "AuthData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.FingerprintResponseUnion), global::Spotify.FingerprintResponseUnion.Parser, new[]{ "Grain", "HmacRipemd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.FingerprintGrainResponse), global::Spotify.FingerprintGrainResponse.Parser, new[]{ "EncryptedKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.FingerprintHmacRipemdResponse), global::Spotify.FingerprintHmacRipemdResponse.Parser, new[]{ "Hmac" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.PeerTicketUnion), global::Spotify.PeerTicketUnion.Parser, new[]{ "PublicKey", "OldTicket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.PeerTicketPublicKey), global::Spotify.PeerTicketPublicKey.Parser, new[]{ "PublicKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.PeerTicketOld), global::Spotify.PeerTicketOld.Parser, new[]{ "PeerTicket", "PeerTicketSignature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.SystemInfo), global::Spotify.SystemInfo.Parser, new[]{ "CpuFamily", "CpuSubtype", "CpuExt", "Brand", "BrandFlags", "Os", "OsVersion", "OsExt", "SystemInformationString", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.LibspotifyAppKey), global::Spotify.LibspotifyAppKey.Parser, new[]{ "Version", "Devkey", "Signature", "Useragent", "CallbackHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.ClientInfo), global::Spotify.ClientInfo.Parser, new[]{ "Limited", "Fb", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.ClientInfoFacebook), global::Spotify.ClientInfoFacebook.Parser, new[]{ "MachineId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.APWelcome), global::Spotify.APWelcome.Parser, new[]{ "CanonicalUsername", "AccountTypeLoggedIn", "CredentialsTypeLoggedIn", "ReusableAuthCredentialsType", "ReusableAuthCredentials", "LfsSecret", "AccountInfo", "Fb" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.AccountInfo), global::Spotify.AccountInfo.Parser, new[]{ "Spotify", "Facebook" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.AccountInfoSpotify), global::Spotify.AccountInfoSpotify.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.AccountInfoFacebook), global::Spotify.AccountInfoFacebook.Parser, new[]{ "AccessToken", "MachineId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AuthenticationType {
    [pbr::OriginalName("AUTHENTICATION_USER_PASS")] AuthenticationUserPass = 0,
    [pbr::OriginalName("AUTHENTICATION_STORED_SPOTIFY_CREDENTIALS")] AuthenticationStoredSpotifyCredentials = 1,
    [pbr::OriginalName("AUTHENTICATION_STORED_FACEBOOK_CREDENTIALS")] AuthenticationStoredFacebookCredentials = 2,
    [pbr::OriginalName("AUTHENTICATION_SPOTIFY_TOKEN")] AuthenticationSpotifyToken = 3,
    [pbr::OriginalName("AUTHENTICATION_FACEBOOK_TOKEN")] AuthenticationFacebookToken = 4,
  }

  public enum AccountCreation {
    [pbr::OriginalName("ACCOUNT_CREATION_ALWAYS_PROMPT")] AlwaysPrompt = 1,
    [pbr::OriginalName("ACCOUNT_CREATION_ALWAYS_CREATE")] AlwaysCreate = 3,
  }

  public enum CpuFamily {
    [pbr::OriginalName("CPU_UNKNOWN")] CpuUnknown = 0,
    [pbr::OriginalName("CPU_X86")] CpuX86 = 1,
    [pbr::OriginalName("CPU_X86_64")] CpuX8664 = 2,
    [pbr::OriginalName("CPU_PPC")] CpuPpc = 3,
    [pbr::OriginalName("CPU_PPC_64")] CpuPpc64 = 4,
    [pbr::OriginalName("CPU_ARM")] CpuArm = 5,
    [pbr::OriginalName("CPU_IA64")] CpuIa64 = 6,
    [pbr::OriginalName("CPU_SH")] CpuSh = 7,
    [pbr::OriginalName("CPU_MIPS")] CpuMips = 8,
    [pbr::OriginalName("CPU_BLACKFIN")] CpuBlackfin = 9,
  }

  public enum Brand {
    [pbr::OriginalName("BRAND_UNBRANDED")] Unbranded = 0,
    [pbr::OriginalName("BRAND_INQ")] Inq = 1,
    [pbr::OriginalName("BRAND_HTC")] Htc = 2,
    [pbr::OriginalName("BRAND_NOKIA")] Nokia = 3,
  }

  public enum Os {
    [pbr::OriginalName("OS_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("OS_WINDOWS")] Windows = 1,
    [pbr::OriginalName("OS_OSX")] Osx = 2,
    [pbr::OriginalName("OS_IPHONE")] Iphone = 3,
    [pbr::OriginalName("OS_S60")] S60 = 4,
    [pbr::OriginalName("OS_LINUX")] Linux = 5,
    [pbr::OriginalName("OS_WINDOWS_CE")] WindowsCe = 6,
    [pbr::OriginalName("OS_ANDROID")] Android = 7,
    [pbr::OriginalName("OS_PALM")] Palm = 8,
    [pbr::OriginalName("OS_FREEBSD")] Freebsd = 9,
    [pbr::OriginalName("OS_BLACKBERRY")] Blackberry = 10,
    [pbr::OriginalName("OS_SONOS")] Sonos = 11,
    [pbr::OriginalName("OS_LOGITECH")] Logitech = 12,
    [pbr::OriginalName("OS_WP7")] Wp7 = 13,
    [pbr::OriginalName("OS_ONKYO")] Onkyo = 14,
    [pbr::OriginalName("OS_PHILIPS")] Philips = 15,
    [pbr::OriginalName("OS_WD")] Wd = 16,
    [pbr::OriginalName("OS_VOLVO")] Volvo = 17,
    [pbr::OriginalName("OS_TIVO")] Tivo = 18,
    [pbr::OriginalName("OS_AWOX")] Awox = 19,
    [pbr::OriginalName("OS_MEEGO")] Meego = 20,
    [pbr::OriginalName("OS_QNXNTO")] Qnxnto = 21,
    [pbr::OriginalName("OS_BCO")] Bco = 22,
  }

  public enum AccountType {
    [pbr::OriginalName("Spotify")] Spotify = 0,
    [pbr::OriginalName("Facebook")] Facebook = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ClientResponseEncrypted : pb::IMessage<ClientResponseEncrypted>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientResponseEncrypted> _parser = new pb::MessageParser<ClientResponseEncrypted>(() => new ClientResponseEncrypted());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientResponseEncrypted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponseEncrypted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponseEncrypted(ClientResponseEncrypted other) : this() {
      _hasBits0 = other._hasBits0;
      loginCredentials_ = other.loginCredentials_ != null ? other.loginCredentials_.Clone() : null;
      accountCreation_ = other.accountCreation_;
      fingerprintResponse_ = other.fingerprintResponse_ != null ? other.fingerprintResponse_.Clone() : null;
      peerTicket_ = other.peerTicket_ != null ? other.peerTicket_.Clone() : null;
      systemInfo_ = other.systemInfo_ != null ? other.systemInfo_.Clone() : null;
      platformModel_ = other.platformModel_;
      versionString_ = other.versionString_;
      appkey_ = other.appkey_ != null ? other.appkey_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponseEncrypted Clone() {
      return new ClientResponseEncrypted(this);
    }

    /// <summary>Field number for the "login_credentials" field.</summary>
    public const int LoginCredentialsFieldNumber = 10;
    private global::Spotify.LoginCredentials loginCredentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.LoginCredentials LoginCredentials {
      get { return loginCredentials_; }
      set {
        loginCredentials_ = value;
      }
    }

    /// <summary>Field number for the "account_creation" field.</summary>
    public const int AccountCreationFieldNumber = 20;
    private readonly static global::Spotify.AccountCreation AccountCreationDefaultValue = global::Spotify.AccountCreation.AlwaysPrompt;

    private global::Spotify.AccountCreation accountCreation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountCreation AccountCreation {
      get { if ((_hasBits0 & 1) != 0) { return accountCreation_; } else { return AccountCreationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountCreation_ = value;
      }
    }
    /// <summary>Gets whether the "account_creation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountCreation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_creation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountCreation() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fingerprint_response" field.</summary>
    public const int FingerprintResponseFieldNumber = 30;
    private global::Spotify.FingerprintResponseUnion fingerprintResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.FingerprintResponseUnion FingerprintResponse {
      get { return fingerprintResponse_; }
      set {
        fingerprintResponse_ = value;
      }
    }

    /// <summary>Field number for the "peer_ticket" field.</summary>
    public const int PeerTicketFieldNumber = 40;
    private global::Spotify.PeerTicketUnion peerTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.PeerTicketUnion PeerTicket {
      get { return peerTicket_; }
      set {
        peerTicket_ = value;
      }
    }

    /// <summary>Field number for the "system_info" field.</summary>
    public const int SystemInfoFieldNumber = 50;
    private global::Spotify.SystemInfo systemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.SystemInfo SystemInfo {
      get { return systemInfo_; }
      set {
        systemInfo_ = value;
      }
    }

    /// <summary>Field number for the "platform_model" field.</summary>
    public const int PlatformModelFieldNumber = 60;
    private readonly static string PlatformModelDefaultValue = "";

    private string platformModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformModel {
      get { return platformModel_ ?? PlatformModelDefaultValue; }
      set {
        platformModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform_model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlatformModel {
      get { return platformModel_ != null; }
    }
    /// <summary>Clears the value of the "platform_model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlatformModel() {
      platformModel_ = null;
    }

    /// <summary>Field number for the "version_string" field.</summary>
    public const int VersionStringFieldNumber = 70;
    private readonly static string VersionStringDefaultValue = "";

    private string versionString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionString {
      get { return versionString_ ?? VersionStringDefaultValue; }
      set {
        versionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version_string" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionString {
      get { return versionString_ != null; }
    }
    /// <summary>Clears the value of the "version_string" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionString() {
      versionString_ = null;
    }

    /// <summary>Field number for the "appkey" field.</summary>
    public const int AppkeyFieldNumber = 80;
    private global::Spotify.LibspotifyAppKey appkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.LibspotifyAppKey Appkey {
      get { return appkey_; }
      set {
        appkey_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 90;
    private global::Spotify.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientResponseEncrypted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientResponseEncrypted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoginCredentials, other.LoginCredentials)) return false;
      if (AccountCreation != other.AccountCreation) return false;
      if (!object.Equals(FingerprintResponse, other.FingerprintResponse)) return false;
      if (!object.Equals(PeerTicket, other.PeerTicket)) return false;
      if (!object.Equals(SystemInfo, other.SystemInfo)) return false;
      if (PlatformModel != other.PlatformModel) return false;
      if (VersionString != other.VersionString) return false;
      if (!object.Equals(Appkey, other.Appkey)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loginCredentials_ != null) hash ^= LoginCredentials.GetHashCode();
      if (HasAccountCreation) hash ^= AccountCreation.GetHashCode();
      if (fingerprintResponse_ != null) hash ^= FingerprintResponse.GetHashCode();
      if (peerTicket_ != null) hash ^= PeerTicket.GetHashCode();
      if (systemInfo_ != null) hash ^= SystemInfo.GetHashCode();
      if (HasPlatformModel) hash ^= PlatformModel.GetHashCode();
      if (HasVersionString) hash ^= VersionString.GetHashCode();
      if (appkey_ != null) hash ^= Appkey.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (loginCredentials_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LoginCredentials);
      }
      if (HasAccountCreation) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) AccountCreation);
      }
      if (fingerprintResponse_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(FingerprintResponse);
      }
      if (peerTicket_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(PeerTicket);
      }
      if (systemInfo_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(SystemInfo);
      }
      if (HasPlatformModel) {
        output.WriteRawTag(226, 3);
        output.WriteString(PlatformModel);
      }
      if (HasVersionString) {
        output.WriteRawTag(178, 4);
        output.WriteString(VersionString);
      }
      if (appkey_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(Appkey);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(210, 5);
        output.WriteMessage(ClientInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (loginCredentials_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LoginCredentials);
      }
      if (HasAccountCreation) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) AccountCreation);
      }
      if (fingerprintResponse_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(FingerprintResponse);
      }
      if (peerTicket_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(PeerTicket);
      }
      if (systemInfo_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(SystemInfo);
      }
      if (HasPlatformModel) {
        output.WriteRawTag(226, 3);
        output.WriteString(PlatformModel);
      }
      if (HasVersionString) {
        output.WriteRawTag(178, 4);
        output.WriteString(VersionString);
      }
      if (appkey_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(Appkey);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(210, 5);
        output.WriteMessage(ClientInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loginCredentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginCredentials);
      }
      if (HasAccountCreation) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AccountCreation);
      }
      if (fingerprintResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FingerprintResponse);
      }
      if (peerTicket_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PeerTicket);
      }
      if (systemInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SystemInfo);
      }
      if (HasPlatformModel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PlatformModel);
      }
      if (HasVersionString) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VersionString);
      }
      if (appkey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Appkey);
      }
      if (clientInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientResponseEncrypted other) {
      if (other == null) {
        return;
      }
      if (other.loginCredentials_ != null) {
        if (loginCredentials_ == null) {
          LoginCredentials = new global::Spotify.LoginCredentials();
        }
        LoginCredentials.MergeFrom(other.LoginCredentials);
      }
      if (other.HasAccountCreation) {
        AccountCreation = other.AccountCreation;
      }
      if (other.fingerprintResponse_ != null) {
        if (fingerprintResponse_ == null) {
          FingerprintResponse = new global::Spotify.FingerprintResponseUnion();
        }
        FingerprintResponse.MergeFrom(other.FingerprintResponse);
      }
      if (other.peerTicket_ != null) {
        if (peerTicket_ == null) {
          PeerTicket = new global::Spotify.PeerTicketUnion();
        }
        PeerTicket.MergeFrom(other.PeerTicket);
      }
      if (other.systemInfo_ != null) {
        if (systemInfo_ == null) {
          SystemInfo = new global::Spotify.SystemInfo();
        }
        SystemInfo.MergeFrom(other.SystemInfo);
      }
      if (other.HasPlatformModel) {
        PlatformModel = other.PlatformModel;
      }
      if (other.HasVersionString) {
        VersionString = other.VersionString;
      }
      if (other.appkey_ != null) {
        if (appkey_ == null) {
          Appkey = new global::Spotify.LibspotifyAppKey();
        }
        Appkey.MergeFrom(other.Appkey);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Spotify.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            if (loginCredentials_ == null) {
              LoginCredentials = new global::Spotify.LoginCredentials();
            }
            input.ReadMessage(LoginCredentials);
            break;
          }
          case 160: {
            AccountCreation = (global::Spotify.AccountCreation) input.ReadEnum();
            break;
          }
          case 242: {
            if (fingerprintResponse_ == null) {
              FingerprintResponse = new global::Spotify.FingerprintResponseUnion();
            }
            input.ReadMessage(FingerprintResponse);
            break;
          }
          case 322: {
            if (peerTicket_ == null) {
              PeerTicket = new global::Spotify.PeerTicketUnion();
            }
            input.ReadMessage(PeerTicket);
            break;
          }
          case 402: {
            if (systemInfo_ == null) {
              SystemInfo = new global::Spotify.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 482: {
            PlatformModel = input.ReadString();
            break;
          }
          case 562: {
            VersionString = input.ReadString();
            break;
          }
          case 642: {
            if (appkey_ == null) {
              Appkey = new global::Spotify.LibspotifyAppKey();
            }
            input.ReadMessage(Appkey);
            break;
          }
          case 722: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Spotify.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            if (loginCredentials_ == null) {
              LoginCredentials = new global::Spotify.LoginCredentials();
            }
            input.ReadMessage(LoginCredentials);
            break;
          }
          case 160: {
            AccountCreation = (global::Spotify.AccountCreation) input.ReadEnum();
            break;
          }
          case 242: {
            if (fingerprintResponse_ == null) {
              FingerprintResponse = new global::Spotify.FingerprintResponseUnion();
            }
            input.ReadMessage(FingerprintResponse);
            break;
          }
          case 322: {
            if (peerTicket_ == null) {
              PeerTicket = new global::Spotify.PeerTicketUnion();
            }
            input.ReadMessage(PeerTicket);
            break;
          }
          case 402: {
            if (systemInfo_ == null) {
              SystemInfo = new global::Spotify.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 482: {
            PlatformModel = input.ReadString();
            break;
          }
          case 562: {
            VersionString = input.ReadString();
            break;
          }
          case 642: {
            if (appkey_ == null) {
              Appkey = new global::Spotify.LibspotifyAppKey();
            }
            input.ReadMessage(Appkey);
            break;
          }
          case 722: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Spotify.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginCredentials : pb::IMessage<LoginCredentials>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginCredentials> _parser = new pb::MessageParser<LoginCredentials>(() => new LoginCredentials());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginCredentials(LoginCredentials other) : this() {
      _hasBits0 = other._hasBits0;
      username_ = other.username_;
      typ_ = other.typ_;
      authData_ = other.authData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginCredentials Clone() {
      return new LoginCredentials(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 10;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "typ" field.</summary>
    public const int TypFieldNumber = 20;
    private readonly static global::Spotify.AuthenticationType TypDefaultValue = global::Spotify.AuthenticationType.AuthenticationUserPass;

    private global::Spotify.AuthenticationType typ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AuthenticationType Typ {
      get { if ((_hasBits0 & 1) != 0) { return typ_; } else { return TypDefaultValue; } }
      set {
        _hasBits0 |= 1;
        typ_ = value;
      }
    }
    /// <summary>Gets whether the "typ" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTyp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "typ" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTyp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "auth_data" field.</summary>
    public const int AuthDataFieldNumber = 30;
    private readonly static pb::ByteString AuthDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString authData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AuthData {
      get { return authData_ ?? AuthDataDefaultValue; }
      set {
        authData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "auth_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAuthData {
      get { return authData_ != null; }
    }
    /// <summary>Clears the value of the "auth_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuthData() {
      authData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Typ != other.Typ) return false;
      if (AuthData != other.AuthData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasTyp) hash ^= Typ.GetHashCode();
      if (HasAuthData) hash ^= AuthData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUsername) {
        output.WriteRawTag(82);
        output.WriteString(Username);
      }
      if (HasTyp) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Typ);
      }
      if (HasAuthData) {
        output.WriteRawTag(242, 1);
        output.WriteBytes(AuthData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(82);
        output.WriteString(Username);
      }
      if (HasTyp) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Typ);
      }
      if (HasAuthData) {
        output.WriteRawTag(242, 1);
        output.WriteBytes(AuthData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasTyp) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Typ);
      }
      if (HasAuthData) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(AuthData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginCredentials other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasTyp) {
        Typ = other.Typ;
      }
      if (other.HasAuthData) {
        AuthData = other.AuthData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            Username = input.ReadString();
            break;
          }
          case 160: {
            Typ = (global::Spotify.AuthenticationType) input.ReadEnum();
            break;
          }
          case 242: {
            AuthData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            Username = input.ReadString();
            break;
          }
          case 160: {
            Typ = (global::Spotify.AuthenticationType) input.ReadEnum();
            break;
          }
          case 242: {
            AuthData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FingerprintResponseUnion : pb::IMessage<FingerprintResponseUnion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FingerprintResponseUnion> _parser = new pb::MessageParser<FingerprintResponseUnion>(() => new FingerprintResponseUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FingerprintResponseUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintResponseUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintResponseUnion(FingerprintResponseUnion other) : this() {
      grain_ = other.grain_ != null ? other.grain_.Clone() : null;
      hmacRipemd_ = other.hmacRipemd_ != null ? other.hmacRipemd_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintResponseUnion Clone() {
      return new FingerprintResponseUnion(this);
    }

    /// <summary>Field number for the "grain" field.</summary>
    public const int GrainFieldNumber = 10;
    private global::Spotify.FingerprintGrainResponse grain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.FingerprintGrainResponse Grain {
      get { return grain_; }
      set {
        grain_ = value;
      }
    }

    /// <summary>Field number for the "hmac_ripemd" field.</summary>
    public const int HmacRipemdFieldNumber = 20;
    private global::Spotify.FingerprintHmacRipemdResponse hmacRipemd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.FingerprintHmacRipemdResponse HmacRipemd {
      get { return hmacRipemd_; }
      set {
        hmacRipemd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FingerprintResponseUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FingerprintResponseUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Grain, other.Grain)) return false;
      if (!object.Equals(HmacRipemd, other.HmacRipemd)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (grain_ != null) hash ^= Grain.GetHashCode();
      if (hmacRipemd_ != null) hash ^= HmacRipemd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (grain_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Grain);
      }
      if (hmacRipemd_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(HmacRipemd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (grain_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Grain);
      }
      if (hmacRipemd_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(HmacRipemd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (grain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Grain);
      }
      if (hmacRipemd_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HmacRipemd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FingerprintResponseUnion other) {
      if (other == null) {
        return;
      }
      if (other.grain_ != null) {
        if (grain_ == null) {
          Grain = new global::Spotify.FingerprintGrainResponse();
        }
        Grain.MergeFrom(other.Grain);
      }
      if (other.hmacRipemd_ != null) {
        if (hmacRipemd_ == null) {
          HmacRipemd = new global::Spotify.FingerprintHmacRipemdResponse();
        }
        HmacRipemd.MergeFrom(other.HmacRipemd);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            if (grain_ == null) {
              Grain = new global::Spotify.FingerprintGrainResponse();
            }
            input.ReadMessage(Grain);
            break;
          }
          case 162: {
            if (hmacRipemd_ == null) {
              HmacRipemd = new global::Spotify.FingerprintHmacRipemdResponse();
            }
            input.ReadMessage(HmacRipemd);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            if (grain_ == null) {
              Grain = new global::Spotify.FingerprintGrainResponse();
            }
            input.ReadMessage(Grain);
            break;
          }
          case 162: {
            if (hmacRipemd_ == null) {
              HmacRipemd = new global::Spotify.FingerprintHmacRipemdResponse();
            }
            input.ReadMessage(HmacRipemd);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FingerprintGrainResponse : pb::IMessage<FingerprintGrainResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FingerprintGrainResponse> _parser = new pb::MessageParser<FingerprintGrainResponse>(() => new FingerprintGrainResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FingerprintGrainResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintGrainResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintGrainResponse(FingerprintGrainResponse other) : this() {
      encryptedKey_ = other.encryptedKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintGrainResponse Clone() {
      return new FingerprintGrainResponse(this);
    }

    /// <summary>Field number for the "encrypted_key" field.</summary>
    public const int EncryptedKeyFieldNumber = 10;
    private readonly static pb::ByteString EncryptedKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString encryptedKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncryptedKey {
      get { return encryptedKey_ ?? EncryptedKeyDefaultValue; }
      set {
        encryptedKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encrypted_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEncryptedKey {
      get { return encryptedKey_ != null; }
    }
    /// <summary>Clears the value of the "encrypted_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEncryptedKey() {
      encryptedKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FingerprintGrainResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FingerprintGrainResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncryptedKey != other.EncryptedKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEncryptedKey) hash ^= EncryptedKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEncryptedKey) {
        output.WriteRawTag(82);
        output.WriteBytes(EncryptedKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEncryptedKey) {
        output.WriteRawTag(82);
        output.WriteBytes(EncryptedKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEncryptedKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FingerprintGrainResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasEncryptedKey) {
        EncryptedKey = other.EncryptedKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            EncryptedKey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            EncryptedKey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FingerprintHmacRipemdResponse : pb::IMessage<FingerprintHmacRipemdResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FingerprintHmacRipemdResponse> _parser = new pb::MessageParser<FingerprintHmacRipemdResponse>(() => new FingerprintHmacRipemdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FingerprintHmacRipemdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintHmacRipemdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintHmacRipemdResponse(FingerprintHmacRipemdResponse other) : this() {
      hmac_ = other.hmac_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FingerprintHmacRipemdResponse Clone() {
      return new FingerprintHmacRipemdResponse(this);
    }

    /// <summary>Field number for the "hmac" field.</summary>
    public const int HmacFieldNumber = 10;
    private readonly static pb::ByteString HmacDefaultValue = pb::ByteString.Empty;

    private pb::ByteString hmac_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hmac {
      get { return hmac_ ?? HmacDefaultValue; }
      set {
        hmac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hmac" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHmac {
      get { return hmac_ != null; }
    }
    /// <summary>Clears the value of the "hmac" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHmac() {
      hmac_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FingerprintHmacRipemdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FingerprintHmacRipemdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hmac != other.Hmac) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHmac) hash ^= Hmac.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHmac) {
        output.WriteRawTag(82);
        output.WriteBytes(Hmac);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHmac) {
        output.WriteRawTag(82);
        output.WriteBytes(Hmac);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHmac) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hmac);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FingerprintHmacRipemdResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasHmac) {
        Hmac = other.Hmac;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            Hmac = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            Hmac = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PeerTicketUnion : pb::IMessage<PeerTicketUnion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PeerTicketUnion> _parser = new pb::MessageParser<PeerTicketUnion>(() => new PeerTicketUnion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerTicketUnion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketUnion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketUnion(PeerTicketUnion other) : this() {
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      oldTicket_ = other.oldTicket_ != null ? other.oldTicket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketUnion Clone() {
      return new PeerTicketUnion(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 10;
    private global::Spotify.PeerTicketPublicKey publicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.PeerTicketPublicKey PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "old_ticket" field.</summary>
    public const int OldTicketFieldNumber = 20;
    private global::Spotify.PeerTicketOld oldTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.PeerTicketOld OldTicket {
      get { return oldTicket_; }
      set {
        oldTicket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerTicketUnion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerTicketUnion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (!object.Equals(OldTicket, other.OldTicket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (oldTicket_ != null) hash ^= OldTicket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (publicKey_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PublicKey);
      }
      if (oldTicket_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(OldTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (publicKey_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PublicKey);
      }
      if (oldTicket_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(OldTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (oldTicket_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OldTicket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerTicketUnion other) {
      if (other == null) {
        return;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          PublicKey = new global::Spotify.PeerTicketPublicKey();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.oldTicket_ != null) {
        if (oldTicket_ == null) {
          OldTicket = new global::Spotify.PeerTicketOld();
        }
        OldTicket.MergeFrom(other.OldTicket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            if (publicKey_ == null) {
              PublicKey = new global::Spotify.PeerTicketPublicKey();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 162: {
            if (oldTicket_ == null) {
              OldTicket = new global::Spotify.PeerTicketOld();
            }
            input.ReadMessage(OldTicket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            if (publicKey_ == null) {
              PublicKey = new global::Spotify.PeerTicketPublicKey();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 162: {
            if (oldTicket_ == null) {
              OldTicket = new global::Spotify.PeerTicketOld();
            }
            input.ReadMessage(OldTicket);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PeerTicketPublicKey : pb::IMessage<PeerTicketPublicKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PeerTicketPublicKey> _parser = new pb::MessageParser<PeerTicketPublicKey>(() => new PeerTicketPublicKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerTicketPublicKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketPublicKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketPublicKey(PeerTicketPublicKey other) : this() {
      publicKey_ = other.publicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketPublicKey Clone() {
      return new PeerTicketPublicKey(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 10;
    private readonly static pb::ByteString PublicKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString publicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PublicKey {
      get { return publicKey_ ?? PublicKeyDefaultValue; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "public_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPublicKey {
      get { return publicKey_ != null; }
    }
    /// <summary>Clears the value of the "public_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPublicKey() {
      publicKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerTicketPublicKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerTicketPublicKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PublicKey != other.PublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPublicKey) hash ^= PublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPublicKey) {
        output.WriteRawTag(82);
        output.WriteBytes(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPublicKey) {
        output.WriteRawTag(82);
        output.WriteBytes(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerTicketPublicKey other) {
      if (other == null) {
        return;
      }
      if (other.HasPublicKey) {
        PublicKey = other.PublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            PublicKey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            PublicKey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PeerTicketOld : pb::IMessage<PeerTicketOld>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PeerTicketOld> _parser = new pb::MessageParser<PeerTicketOld>(() => new PeerTicketOld());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerTicketOld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketOld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketOld(PeerTicketOld other) : this() {
      peerTicket_ = other.peerTicket_;
      peerTicketSignature_ = other.peerTicketSignature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerTicketOld Clone() {
      return new PeerTicketOld(this);
    }

    /// <summary>Field number for the "peer_ticket" field.</summary>
    public const int PeerTicketFieldNumber = 10;
    private readonly static pb::ByteString PeerTicketDefaultValue = pb::ByteString.Empty;

    private pb::ByteString peerTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PeerTicket {
      get { return peerTicket_ ?? PeerTicketDefaultValue; }
      set {
        peerTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "peer_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPeerTicket {
      get { return peerTicket_ != null; }
    }
    /// <summary>Clears the value of the "peer_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPeerTicket() {
      peerTicket_ = null;
    }

    /// <summary>Field number for the "peer_ticket_signature" field.</summary>
    public const int PeerTicketSignatureFieldNumber = 20;
    private readonly static pb::ByteString PeerTicketSignatureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString peerTicketSignature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PeerTicketSignature {
      get { return peerTicketSignature_ ?? PeerTicketSignatureDefaultValue; }
      set {
        peerTicketSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "peer_ticket_signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPeerTicketSignature {
      get { return peerTicketSignature_ != null; }
    }
    /// <summary>Clears the value of the "peer_ticket_signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPeerTicketSignature() {
      peerTicketSignature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerTicketOld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerTicketOld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeerTicket != other.PeerTicket) return false;
      if (PeerTicketSignature != other.PeerTicketSignature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPeerTicket) hash ^= PeerTicket.GetHashCode();
      if (HasPeerTicketSignature) hash ^= PeerTicketSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPeerTicket) {
        output.WriteRawTag(82);
        output.WriteBytes(PeerTicket);
      }
      if (HasPeerTicketSignature) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(PeerTicketSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPeerTicket) {
        output.WriteRawTag(82);
        output.WriteBytes(PeerTicket);
      }
      if (HasPeerTicketSignature) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(PeerTicketSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPeerTicket) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PeerTicket);
      }
      if (HasPeerTicketSignature) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(PeerTicketSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerTicketOld other) {
      if (other == null) {
        return;
      }
      if (other.HasPeerTicket) {
        PeerTicket = other.PeerTicket;
      }
      if (other.HasPeerTicketSignature) {
        PeerTicketSignature = other.PeerTicketSignature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            PeerTicket = input.ReadBytes();
            break;
          }
          case 162: {
            PeerTicketSignature = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            PeerTicket = input.ReadBytes();
            break;
          }
          case 162: {
            PeerTicketSignature = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SystemInfo : pb::IMessage<SystemInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SystemInfo> _parser = new pb::MessageParser<SystemInfo>(() => new SystemInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemInfo(SystemInfo other) : this() {
      _hasBits0 = other._hasBits0;
      cpuFamily_ = other.cpuFamily_;
      cpuSubtype_ = other.cpuSubtype_;
      cpuExt_ = other.cpuExt_;
      brand_ = other.brand_;
      brandFlags_ = other.brandFlags_;
      os_ = other.os_;
      osVersion_ = other.osVersion_;
      osExt_ = other.osExt_;
      systemInformationString_ = other.systemInformationString_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemInfo Clone() {
      return new SystemInfo(this);
    }

    /// <summary>Field number for the "cpu_family" field.</summary>
    public const int CpuFamilyFieldNumber = 10;
    private readonly static global::Spotify.CpuFamily CpuFamilyDefaultValue = global::Spotify.CpuFamily.CpuUnknown;

    private global::Spotify.CpuFamily cpuFamily_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.CpuFamily CpuFamily {
      get { if ((_hasBits0 & 1) != 0) { return cpuFamily_; } else { return CpuFamilyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cpuFamily_ = value;
      }
    }
    /// <summary>Gets whether the "cpu_family" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpuFamily {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cpu_family" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpuFamily() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cpu_subtype" field.</summary>
    public const int CpuSubtypeFieldNumber = 20;
    private readonly static uint CpuSubtypeDefaultValue = 0;

    private uint cpuSubtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CpuSubtype {
      get { if ((_hasBits0 & 2) != 0) { return cpuSubtype_; } else { return CpuSubtypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cpuSubtype_ = value;
      }
    }
    /// <summary>Gets whether the "cpu_subtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpuSubtype {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpu_subtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpuSubtype() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cpu_ext" field.</summary>
    public const int CpuExtFieldNumber = 30;
    private readonly static uint CpuExtDefaultValue = 0;

    private uint cpuExt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CpuExt {
      get { if ((_hasBits0 & 4) != 0) { return cpuExt_; } else { return CpuExtDefaultValue; } }
      set {
        _hasBits0 |= 4;
        cpuExt_ = value;
      }
    }
    /// <summary>Gets whether the "cpu_ext" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpuExt {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cpu_ext" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpuExt() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 40;
    private readonly static global::Spotify.Brand BrandDefaultValue = global::Spotify.Brand.Unbranded;

    private global::Spotify.Brand brand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.Brand Brand {
      get { if ((_hasBits0 & 8) != 0) { return brand_; } else { return BrandDefaultValue; } }
      set {
        _hasBits0 |= 8;
        brand_ = value;
      }
    }
    /// <summary>Gets whether the "brand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrand {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "brand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrand() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "brand_flags" field.</summary>
    public const int BrandFlagsFieldNumber = 50;
    private readonly static uint BrandFlagsDefaultValue = 0;

    private uint brandFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BrandFlags {
      get { if ((_hasBits0 & 16) != 0) { return brandFlags_; } else { return BrandFlagsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        brandFlags_ = value;
      }
    }
    /// <summary>Gets whether the "brand_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBrandFlags {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "brand_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBrandFlags() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "os" field.</summary>
    public const int OsFieldNumber = 60;
    private readonly static global::Spotify.Os OsDefaultValue = global::Spotify.Os.Unknown;

    private global::Spotify.Os os_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.Os Os {
      get { if ((_hasBits0 & 32) != 0) { return os_; } else { return OsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        os_ = value;
      }
    }
    /// <summary>Gets whether the "os" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOs {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "os" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOs() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "os_version" field.</summary>
    public const int OsVersionFieldNumber = 70;
    private readonly static uint OsVersionDefaultValue = 0;

    private uint osVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OsVersion {
      get { if ((_hasBits0 & 64) != 0) { return osVersion_; } else { return OsVersionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        osVersion_ = value;
      }
    }
    /// <summary>Gets whether the "os_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOsVersion {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "os_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOsVersion() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "os_ext" field.</summary>
    public const int OsExtFieldNumber = 80;
    private readonly static uint OsExtDefaultValue = 0;

    private uint osExt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OsExt {
      get { if ((_hasBits0 & 128) != 0) { return osExt_; } else { return OsExtDefaultValue; } }
      set {
        _hasBits0 |= 128;
        osExt_ = value;
      }
    }
    /// <summary>Gets whether the "os_ext" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOsExt {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "os_ext" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOsExt() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "system_information_string" field.</summary>
    public const int SystemInformationStringFieldNumber = 90;
    private readonly static string SystemInformationStringDefaultValue = "";

    private string systemInformationString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SystemInformationString {
      get { return systemInformationString_ ?? SystemInformationStringDefaultValue; }
      set {
        systemInformationString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "system_information_string" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSystemInformationString {
      get { return systemInformationString_ != null; }
    }
    /// <summary>Clears the value of the "system_information_string" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSystemInformationString() {
      systemInformationString_ = null;
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 100;
    private readonly static string DeviceIdDefaultValue = "";

    private string deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_ ?? DeviceIdDefaultValue; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceId {
      get { return deviceId_ != null; }
    }
    /// <summary>Clears the value of the "device_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceId() {
      deviceId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpuFamily != other.CpuFamily) return false;
      if (CpuSubtype != other.CpuSubtype) return false;
      if (CpuExt != other.CpuExt) return false;
      if (Brand != other.Brand) return false;
      if (BrandFlags != other.BrandFlags) return false;
      if (Os != other.Os) return false;
      if (OsVersion != other.OsVersion) return false;
      if (OsExt != other.OsExt) return false;
      if (SystemInformationString != other.SystemInformationString) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCpuFamily) hash ^= CpuFamily.GetHashCode();
      if (HasCpuSubtype) hash ^= CpuSubtype.GetHashCode();
      if (HasCpuExt) hash ^= CpuExt.GetHashCode();
      if (HasBrand) hash ^= Brand.GetHashCode();
      if (HasBrandFlags) hash ^= BrandFlags.GetHashCode();
      if (HasOs) hash ^= Os.GetHashCode();
      if (HasOsVersion) hash ^= OsVersion.GetHashCode();
      if (HasOsExt) hash ^= OsExt.GetHashCode();
      if (HasSystemInformationString) hash ^= SystemInformationString.GetHashCode();
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCpuFamily) {
        output.WriteRawTag(80);
        output.WriteEnum((int) CpuFamily);
      }
      if (HasCpuSubtype) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CpuSubtype);
      }
      if (HasCpuExt) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(CpuExt);
      }
      if (HasBrand) {
        output.WriteRawTag(192, 2);
        output.WriteEnum((int) Brand);
      }
      if (HasBrandFlags) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(BrandFlags);
      }
      if (HasOs) {
        output.WriteRawTag(224, 3);
        output.WriteEnum((int) Os);
      }
      if (HasOsVersion) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(OsVersion);
      }
      if (HasOsExt) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(OsExt);
      }
      if (HasSystemInformationString) {
        output.WriteRawTag(210, 5);
        output.WriteString(SystemInformationString);
      }
      if (HasDeviceId) {
        output.WriteRawTag(162, 6);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCpuFamily) {
        output.WriteRawTag(80);
        output.WriteEnum((int) CpuFamily);
      }
      if (HasCpuSubtype) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CpuSubtype);
      }
      if (HasCpuExt) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(CpuExt);
      }
      if (HasBrand) {
        output.WriteRawTag(192, 2);
        output.WriteEnum((int) Brand);
      }
      if (HasBrandFlags) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(BrandFlags);
      }
      if (HasOs) {
        output.WriteRawTag(224, 3);
        output.WriteEnum((int) Os);
      }
      if (HasOsVersion) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(OsVersion);
      }
      if (HasOsExt) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(OsExt);
      }
      if (HasSystemInformationString) {
        output.WriteRawTag(210, 5);
        output.WriteString(SystemInformationString);
      }
      if (HasDeviceId) {
        output.WriteRawTag(162, 6);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCpuFamily) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CpuFamily);
      }
      if (HasCpuSubtype) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpuSubtype);
      }
      if (HasCpuExt) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpuExt);
      }
      if (HasBrand) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Brand);
      }
      if (HasBrandFlags) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BrandFlags);
      }
      if (HasOs) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Os);
      }
      if (HasOsVersion) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OsVersion);
      }
      if (HasOsExt) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OsExt);
      }
      if (HasSystemInformationString) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SystemInformationString);
      }
      if (HasDeviceId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasCpuFamily) {
        CpuFamily = other.CpuFamily;
      }
      if (other.HasCpuSubtype) {
        CpuSubtype = other.CpuSubtype;
      }
      if (other.HasCpuExt) {
        CpuExt = other.CpuExt;
      }
      if (other.HasBrand) {
        Brand = other.Brand;
      }
      if (other.HasBrandFlags) {
        BrandFlags = other.BrandFlags;
      }
      if (other.HasOs) {
        Os = other.Os;
      }
      if (other.HasOsVersion) {
        OsVersion = other.OsVersion;
      }
      if (other.HasOsExt) {
        OsExt = other.OsExt;
      }
      if (other.HasSystemInformationString) {
        SystemInformationString = other.SystemInformationString;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 80: {
            CpuFamily = (global::Spotify.CpuFamily) input.ReadEnum();
            break;
          }
          case 160: {
            CpuSubtype = input.ReadUInt32();
            break;
          }
          case 240: {
            CpuExt = input.ReadUInt32();
            break;
          }
          case 320: {
            Brand = (global::Spotify.Brand) input.ReadEnum();
            break;
          }
          case 400: {
            BrandFlags = input.ReadUInt32();
            break;
          }
          case 480: {
            Os = (global::Spotify.Os) input.ReadEnum();
            break;
          }
          case 560: {
            OsVersion = input.ReadUInt32();
            break;
          }
          case 640: {
            OsExt = input.ReadUInt32();
            break;
          }
          case 722: {
            SystemInformationString = input.ReadString();
            break;
          }
          case 802: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 80: {
            CpuFamily = (global::Spotify.CpuFamily) input.ReadEnum();
            break;
          }
          case 160: {
            CpuSubtype = input.ReadUInt32();
            break;
          }
          case 240: {
            CpuExt = input.ReadUInt32();
            break;
          }
          case 320: {
            Brand = (global::Spotify.Brand) input.ReadEnum();
            break;
          }
          case 400: {
            BrandFlags = input.ReadUInt32();
            break;
          }
          case 480: {
            Os = (global::Spotify.Os) input.ReadEnum();
            break;
          }
          case 560: {
            OsVersion = input.ReadUInt32();
            break;
          }
          case 640: {
            OsExt = input.ReadUInt32();
            break;
          }
          case 722: {
            SystemInformationString = input.ReadString();
            break;
          }
          case 802: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LibspotifyAppKey : pb::IMessage<LibspotifyAppKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LibspotifyAppKey> _parser = new pb::MessageParser<LibspotifyAppKey>(() => new LibspotifyAppKey());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibspotifyAppKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibspotifyAppKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibspotifyAppKey(LibspotifyAppKey other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      devkey_ = other.devkey_;
      signature_ = other.signature_;
      useragent_ = other.useragent_;
      callbackHash_ = other.callbackHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibspotifyAppKey Clone() {
      return new LibspotifyAppKey(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "devkey" field.</summary>
    public const int DevkeyFieldNumber = 2;
    private readonly static pb::ByteString DevkeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString devkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Devkey {
      get { return devkey_ ?? DevkeyDefaultValue; }
      set {
        devkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "devkey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDevkey {
      get { return devkey_ != null; }
    }
    /// <summary>Clears the value of the "devkey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDevkey() {
      devkey_ = null;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignature() {
      signature_ = null;
    }

    /// <summary>Field number for the "useragent" field.</summary>
    public const int UseragentFieldNumber = 4;
    private readonly static string UseragentDefaultValue = "";

    private string useragent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Useragent {
      get { return useragent_ ?? UseragentDefaultValue; }
      set {
        useragent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "useragent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUseragent {
      get { return useragent_ != null; }
    }
    /// <summary>Clears the value of the "useragent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUseragent() {
      useragent_ = null;
    }

    /// <summary>Field number for the "callback_hash" field.</summary>
    public const int CallbackHashFieldNumber = 5;
    private readonly static pb::ByteString CallbackHashDefaultValue = pb::ByteString.Empty;

    private pb::ByteString callbackHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CallbackHash {
      get { return callbackHash_ ?? CallbackHashDefaultValue; }
      set {
        callbackHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "callback_hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCallbackHash {
      get { return callbackHash_ != null; }
    }
    /// <summary>Clears the value of the "callback_hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallbackHash() {
      callbackHash_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibspotifyAppKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibspotifyAppKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Devkey != other.Devkey) return false;
      if (Signature != other.Signature) return false;
      if (Useragent != other.Useragent) return false;
      if (CallbackHash != other.CallbackHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasDevkey) hash ^= Devkey.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (HasUseragent) hash ^= Useragent.GetHashCode();
      if (HasCallbackHash) hash ^= CallbackHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HasDevkey) {
        output.WriteRawTag(18);
        output.WriteBytes(Devkey);
      }
      if (HasSignature) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (HasUseragent) {
        output.WriteRawTag(34);
        output.WriteString(Useragent);
      }
      if (HasCallbackHash) {
        output.WriteRawTag(42);
        output.WriteBytes(CallbackHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HasDevkey) {
        output.WriteRawTag(18);
        output.WriteBytes(Devkey);
      }
      if (HasSignature) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (HasUseragent) {
        output.WriteRawTag(34);
        output.WriteString(Useragent);
      }
      if (HasCallbackHash) {
        output.WriteRawTag(42);
        output.WriteBytes(CallbackHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (HasDevkey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Devkey);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (HasUseragent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Useragent);
      }
      if (HasCallbackHash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CallbackHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibspotifyAppKey other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasDevkey) {
        Devkey = other.Devkey;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      if (other.HasUseragent) {
        Useragent = other.Useragent;
      }
      if (other.HasCallbackHash) {
        CallbackHash = other.CallbackHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            Devkey = input.ReadBytes();
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 34: {
            Useragent = input.ReadString();
            break;
          }
          case 42: {
            CallbackHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            Devkey = input.ReadBytes();
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 34: {
            Useragent = input.ReadString();
            break;
          }
          case 42: {
            CallbackHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientInfo : pb::IMessage<ClientInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfo> _parser = new pb::MessageParser<ClientInfo>(() => new ClientInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo(ClientInfo other) : this() {
      _hasBits0 = other._hasBits0;
      limited_ = other.limited_;
      fb_ = other.fb_ != null ? other.fb_.Clone() : null;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo Clone() {
      return new ClientInfo(this);
    }

    /// <summary>Field number for the "limited" field.</summary>
    public const int LimitedFieldNumber = 1;
    private readonly static bool LimitedDefaultValue = false;

    private bool limited_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Limited {
      get { if ((_hasBits0 & 1) != 0) { return limited_; } else { return LimitedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limited_ = value;
      }
    }
    /// <summary>Gets whether the "limited" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimited {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limited" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimited() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fb" field.</summary>
    public const int FbFieldNumber = 2;
    private global::Spotify.ClientInfoFacebook fb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.ClientInfoFacebook Fb {
      get { return fb_; }
      set {
        fb_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limited != other.Limited) return false;
      if (!object.Equals(Fb, other.Fb)) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLimited) hash ^= Limited.GetHashCode();
      if (fb_ != null) hash ^= Fb.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLimited) {
        output.WriteRawTag(8);
        output.WriteBool(Limited);
      }
      if (fb_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Fb);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLimited) {
        output.WriteRawTag(8);
        output.WriteBool(Limited);
      }
      if (fb_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Fb);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLimited) {
        size += 1 + 1;
      }
      if (fb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fb);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasLimited) {
        Limited = other.Limited;
      }
      if (other.fb_ != null) {
        if (fb_ == null) {
          Fb = new global::Spotify.ClientInfoFacebook();
        }
        Fb.MergeFrom(other.Fb);
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limited = input.ReadBool();
            break;
          }
          case 18: {
            if (fb_ == null) {
              Fb = new global::Spotify.ClientInfoFacebook();
            }
            input.ReadMessage(Fb);
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limited = input.ReadBool();
            break;
          }
          case 18: {
            if (fb_ == null) {
              Fb = new global::Spotify.ClientInfoFacebook();
            }
            input.ReadMessage(Fb);
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientInfoFacebook : pb::IMessage<ClientInfoFacebook>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfoFacebook> _parser = new pb::MessageParser<ClientInfoFacebook>(() => new ClientInfoFacebook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfoFacebook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoFacebook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoFacebook(ClientInfoFacebook other) : this() {
      machineId_ = other.machineId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoFacebook Clone() {
      return new ClientInfoFacebook(this);
    }

    /// <summary>Field number for the "machine_id" field.</summary>
    public const int MachineIdFieldNumber = 1;
    private readonly static string MachineIdDefaultValue = "";

    private string machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineId {
      get { return machineId_ ?? MachineIdDefaultValue; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machine_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMachineId {
      get { return machineId_ != null; }
    }
    /// <summary>Clears the value of the "machine_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMachineId() {
      machineId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfoFacebook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfoFacebook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineId != other.MachineId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMachineId) hash ^= MachineId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMachineId) {
        output.WriteRawTag(10);
        output.WriteString(MachineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMachineId) {
        output.WriteRawTag(10);
        output.WriteString(MachineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMachineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfoFacebook other) {
      if (other == null) {
        return;
      }
      if (other.HasMachineId) {
        MachineId = other.MachineId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MachineId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MachineId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class APWelcome : pb::IMessage<APWelcome>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<APWelcome> _parser = new pb::MessageParser<APWelcome>(() => new APWelcome());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APWelcome> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APWelcome() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APWelcome(APWelcome other) : this() {
      _hasBits0 = other._hasBits0;
      canonicalUsername_ = other.canonicalUsername_;
      accountTypeLoggedIn_ = other.accountTypeLoggedIn_;
      credentialsTypeLoggedIn_ = other.credentialsTypeLoggedIn_;
      reusableAuthCredentialsType_ = other.reusableAuthCredentialsType_;
      reusableAuthCredentials_ = other.reusableAuthCredentials_;
      lfsSecret_ = other.lfsSecret_;
      accountInfo_ = other.accountInfo_ != null ? other.accountInfo_.Clone() : null;
      fb_ = other.fb_ != null ? other.fb_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APWelcome Clone() {
      return new APWelcome(this);
    }

    /// <summary>Field number for the "canonical_username" field.</summary>
    public const int CanonicalUsernameFieldNumber = 10;
    private readonly static string CanonicalUsernameDefaultValue = "";

    private string canonicalUsername_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CanonicalUsername {
      get { return canonicalUsername_ ?? CanonicalUsernameDefaultValue; }
      set {
        canonicalUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "canonical_username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanonicalUsername {
      get { return canonicalUsername_ != null; }
    }
    /// <summary>Clears the value of the "canonical_username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanonicalUsername() {
      canonicalUsername_ = null;
    }

    /// <summary>Field number for the "account_type_logged_in" field.</summary>
    public const int AccountTypeLoggedInFieldNumber = 20;
    private readonly static global::Spotify.AccountType AccountTypeLoggedInDefaultValue = global::Spotify.AccountType.Spotify;

    private global::Spotify.AccountType accountTypeLoggedIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountType AccountTypeLoggedIn {
      get { if ((_hasBits0 & 1) != 0) { return accountTypeLoggedIn_; } else { return AccountTypeLoggedInDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountTypeLoggedIn_ = value;
      }
    }
    /// <summary>Gets whether the "account_type_logged_in" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountTypeLoggedIn {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_type_logged_in" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountTypeLoggedIn() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "credentials_type_logged_in" field.</summary>
    public const int CredentialsTypeLoggedInFieldNumber = 25;
    private readonly static global::Spotify.AccountType CredentialsTypeLoggedInDefaultValue = global::Spotify.AccountType.Spotify;

    private global::Spotify.AccountType credentialsTypeLoggedIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountType CredentialsTypeLoggedIn {
      get { if ((_hasBits0 & 2) != 0) { return credentialsTypeLoggedIn_; } else { return CredentialsTypeLoggedInDefaultValue; } }
      set {
        _hasBits0 |= 2;
        credentialsTypeLoggedIn_ = value;
      }
    }
    /// <summary>Gets whether the "credentials_type_logged_in" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCredentialsTypeLoggedIn {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "credentials_type_logged_in" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCredentialsTypeLoggedIn() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "reusable_auth_credentials_type" field.</summary>
    public const int ReusableAuthCredentialsTypeFieldNumber = 30;
    private readonly static global::Spotify.AuthenticationType ReusableAuthCredentialsTypeDefaultValue = global::Spotify.AuthenticationType.AuthenticationUserPass;

    private global::Spotify.AuthenticationType reusableAuthCredentialsType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AuthenticationType ReusableAuthCredentialsType {
      get { if ((_hasBits0 & 4) != 0) { return reusableAuthCredentialsType_; } else { return ReusableAuthCredentialsTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        reusableAuthCredentialsType_ = value;
      }
    }
    /// <summary>Gets whether the "reusable_auth_credentials_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReusableAuthCredentialsType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "reusable_auth_credentials_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReusableAuthCredentialsType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "reusable_auth_credentials" field.</summary>
    public const int ReusableAuthCredentialsFieldNumber = 40;
    private readonly static pb::ByteString ReusableAuthCredentialsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString reusableAuthCredentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReusableAuthCredentials {
      get { return reusableAuthCredentials_ ?? ReusableAuthCredentialsDefaultValue; }
      set {
        reusableAuthCredentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reusable_auth_credentials" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReusableAuthCredentials {
      get { return reusableAuthCredentials_ != null; }
    }
    /// <summary>Clears the value of the "reusable_auth_credentials" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReusableAuthCredentials() {
      reusableAuthCredentials_ = null;
    }

    /// <summary>Field number for the "lfs_secret" field.</summary>
    public const int LfsSecretFieldNumber = 50;
    private readonly static pb::ByteString LfsSecretDefaultValue = pb::ByteString.Empty;

    private pb::ByteString lfsSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString LfsSecret {
      get { return lfsSecret_ ?? LfsSecretDefaultValue; }
      set {
        lfsSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lfs_secret" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLfsSecret {
      get { return lfsSecret_ != null; }
    }
    /// <summary>Clears the value of the "lfs_secret" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLfsSecret() {
      lfsSecret_ = null;
    }

    /// <summary>Field number for the "account_info" field.</summary>
    public const int AccountInfoFieldNumber = 60;
    private global::Spotify.AccountInfo accountInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountInfo AccountInfo {
      get { return accountInfo_; }
      set {
        accountInfo_ = value;
      }
    }

    /// <summary>Field number for the "fb" field.</summary>
    public const int FbFieldNumber = 70;
    private global::Spotify.AccountInfoFacebook fb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountInfoFacebook Fb {
      get { return fb_; }
      set {
        fb_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APWelcome);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APWelcome other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanonicalUsername != other.CanonicalUsername) return false;
      if (AccountTypeLoggedIn != other.AccountTypeLoggedIn) return false;
      if (CredentialsTypeLoggedIn != other.CredentialsTypeLoggedIn) return false;
      if (ReusableAuthCredentialsType != other.ReusableAuthCredentialsType) return false;
      if (ReusableAuthCredentials != other.ReusableAuthCredentials) return false;
      if (LfsSecret != other.LfsSecret) return false;
      if (!object.Equals(AccountInfo, other.AccountInfo)) return false;
      if (!object.Equals(Fb, other.Fb)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCanonicalUsername) hash ^= CanonicalUsername.GetHashCode();
      if (HasAccountTypeLoggedIn) hash ^= AccountTypeLoggedIn.GetHashCode();
      if (HasCredentialsTypeLoggedIn) hash ^= CredentialsTypeLoggedIn.GetHashCode();
      if (HasReusableAuthCredentialsType) hash ^= ReusableAuthCredentialsType.GetHashCode();
      if (HasReusableAuthCredentials) hash ^= ReusableAuthCredentials.GetHashCode();
      if (HasLfsSecret) hash ^= LfsSecret.GetHashCode();
      if (accountInfo_ != null) hash ^= AccountInfo.GetHashCode();
      if (fb_ != null) hash ^= Fb.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCanonicalUsername) {
        output.WriteRawTag(82);
        output.WriteString(CanonicalUsername);
      }
      if (HasAccountTypeLoggedIn) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) AccountTypeLoggedIn);
      }
      if (HasCredentialsTypeLoggedIn) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) CredentialsTypeLoggedIn);
      }
      if (HasReusableAuthCredentialsType) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) ReusableAuthCredentialsType);
      }
      if (HasReusableAuthCredentials) {
        output.WriteRawTag(194, 2);
        output.WriteBytes(ReusableAuthCredentials);
      }
      if (HasLfsSecret) {
        output.WriteRawTag(146, 3);
        output.WriteBytes(LfsSecret);
      }
      if (accountInfo_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(AccountInfo);
      }
      if (fb_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(Fb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCanonicalUsername) {
        output.WriteRawTag(82);
        output.WriteString(CanonicalUsername);
      }
      if (HasAccountTypeLoggedIn) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) AccountTypeLoggedIn);
      }
      if (HasCredentialsTypeLoggedIn) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) CredentialsTypeLoggedIn);
      }
      if (HasReusableAuthCredentialsType) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) ReusableAuthCredentialsType);
      }
      if (HasReusableAuthCredentials) {
        output.WriteRawTag(194, 2);
        output.WriteBytes(ReusableAuthCredentials);
      }
      if (HasLfsSecret) {
        output.WriteRawTag(146, 3);
        output.WriteBytes(LfsSecret);
      }
      if (accountInfo_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(AccountInfo);
      }
      if (fb_ != null) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(Fb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCanonicalUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CanonicalUsername);
      }
      if (HasAccountTypeLoggedIn) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AccountTypeLoggedIn);
      }
      if (HasCredentialsTypeLoggedIn) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CredentialsTypeLoggedIn);
      }
      if (HasReusableAuthCredentialsType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ReusableAuthCredentialsType);
      }
      if (HasReusableAuthCredentials) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ReusableAuthCredentials);
      }
      if (HasLfsSecret) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(LfsSecret);
      }
      if (accountInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccountInfo);
      }
      if (fb_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Fb);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APWelcome other) {
      if (other == null) {
        return;
      }
      if (other.HasCanonicalUsername) {
        CanonicalUsername = other.CanonicalUsername;
      }
      if (other.HasAccountTypeLoggedIn) {
        AccountTypeLoggedIn = other.AccountTypeLoggedIn;
      }
      if (other.HasCredentialsTypeLoggedIn) {
        CredentialsTypeLoggedIn = other.CredentialsTypeLoggedIn;
      }
      if (other.HasReusableAuthCredentialsType) {
        ReusableAuthCredentialsType = other.ReusableAuthCredentialsType;
      }
      if (other.HasReusableAuthCredentials) {
        ReusableAuthCredentials = other.ReusableAuthCredentials;
      }
      if (other.HasLfsSecret) {
        LfsSecret = other.LfsSecret;
      }
      if (other.accountInfo_ != null) {
        if (accountInfo_ == null) {
          AccountInfo = new global::Spotify.AccountInfo();
        }
        AccountInfo.MergeFrom(other.AccountInfo);
      }
      if (other.fb_ != null) {
        if (fb_ == null) {
          Fb = new global::Spotify.AccountInfoFacebook();
        }
        Fb.MergeFrom(other.Fb);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            CanonicalUsername = input.ReadString();
            break;
          }
          case 160: {
            AccountTypeLoggedIn = (global::Spotify.AccountType) input.ReadEnum();
            break;
          }
          case 200: {
            CredentialsTypeLoggedIn = (global::Spotify.AccountType) input.ReadEnum();
            break;
          }
          case 240: {
            ReusableAuthCredentialsType = (global::Spotify.AuthenticationType) input.ReadEnum();
            break;
          }
          case 322: {
            ReusableAuthCredentials = input.ReadBytes();
            break;
          }
          case 402: {
            LfsSecret = input.ReadBytes();
            break;
          }
          case 482: {
            if (accountInfo_ == null) {
              AccountInfo = new global::Spotify.AccountInfo();
            }
            input.ReadMessage(AccountInfo);
            break;
          }
          case 562: {
            if (fb_ == null) {
              Fb = new global::Spotify.AccountInfoFacebook();
            }
            input.ReadMessage(Fb);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            CanonicalUsername = input.ReadString();
            break;
          }
          case 160: {
            AccountTypeLoggedIn = (global::Spotify.AccountType) input.ReadEnum();
            break;
          }
          case 200: {
            CredentialsTypeLoggedIn = (global::Spotify.AccountType) input.ReadEnum();
            break;
          }
          case 240: {
            ReusableAuthCredentialsType = (global::Spotify.AuthenticationType) input.ReadEnum();
            break;
          }
          case 322: {
            ReusableAuthCredentials = input.ReadBytes();
            break;
          }
          case 402: {
            LfsSecret = input.ReadBytes();
            break;
          }
          case 482: {
            if (accountInfo_ == null) {
              AccountInfo = new global::Spotify.AccountInfo();
            }
            input.ReadMessage(AccountInfo);
            break;
          }
          case 562: {
            if (fb_ == null) {
              Fb = new global::Spotify.AccountInfoFacebook();
            }
            input.ReadMessage(Fb);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountInfo : pb::IMessage<AccountInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo(AccountInfo other) : this() {
      spotify_ = other.spotify_ != null ? other.spotify_.Clone() : null;
      facebook_ = other.facebook_ != null ? other.facebook_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "spotify" field.</summary>
    public const int SpotifyFieldNumber = 1;
    private global::Spotify.AccountInfoSpotify spotify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountInfoSpotify Spotify {
      get { return spotify_; }
      set {
        spotify_ = value;
      }
    }

    /// <summary>Field number for the "facebook" field.</summary>
    public const int FacebookFieldNumber = 2;
    private global::Spotify.AccountInfoFacebook facebook_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.AccountInfoFacebook Facebook {
      get { return facebook_; }
      set {
        facebook_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spotify, other.Spotify)) return false;
      if (!object.Equals(Facebook, other.Facebook)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spotify_ != null) hash ^= Spotify.GetHashCode();
      if (facebook_ != null) hash ^= Facebook.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spotify_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spotify);
      }
      if (facebook_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Facebook);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spotify_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spotify);
      }
      if (facebook_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Facebook);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spotify_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spotify);
      }
      if (facebook_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Facebook);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.spotify_ != null) {
        if (spotify_ == null) {
          Spotify = new global::Spotify.AccountInfoSpotify();
        }
        Spotify.MergeFrom(other.Spotify);
      }
      if (other.facebook_ != null) {
        if (facebook_ == null) {
          Facebook = new global::Spotify.AccountInfoFacebook();
        }
        Facebook.MergeFrom(other.Facebook);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spotify_ == null) {
              Spotify = new global::Spotify.AccountInfoSpotify();
            }
            input.ReadMessage(Spotify);
            break;
          }
          case 18: {
            if (facebook_ == null) {
              Facebook = new global::Spotify.AccountInfoFacebook();
            }
            input.ReadMessage(Facebook);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (spotify_ == null) {
              Spotify = new global::Spotify.AccountInfoSpotify();
            }
            input.ReadMessage(Spotify);
            break;
          }
          case 18: {
            if (facebook_ == null) {
              Facebook = new global::Spotify.AccountInfoFacebook();
            }
            input.ReadMessage(Facebook);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountInfoSpotify : pb::IMessage<AccountInfoSpotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountInfoSpotify> _parser = new pb::MessageParser<AccountInfoSpotify>(() => new AccountInfoSpotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountInfoSpotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfoSpotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfoSpotify(AccountInfoSpotify other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfoSpotify Clone() {
      return new AccountInfoSpotify(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountInfoSpotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountInfoSpotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountInfoSpotify other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class AccountInfoFacebook : pb::IMessage<AccountInfoFacebook>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountInfoFacebook> _parser = new pb::MessageParser<AccountInfoFacebook>(() => new AccountInfoFacebook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountInfoFacebook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.AuthenticationReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfoFacebook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfoFacebook(AccountInfoFacebook other) : this() {
      accessToken_ = other.accessToken_;
      machineId_ = other.machineId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfoFacebook Clone() {
      return new AccountInfoFacebook(this);
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private readonly static string AccessTokenDefaultValue = "";

    private string accessToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "access_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "access_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccessToken() {
      accessToken_ = null;
    }

    /// <summary>Field number for the "machine_id" field.</summary>
    public const int MachineIdFieldNumber = 2;
    private readonly static string MachineIdDefaultValue = "";

    private string machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineId {
      get { return machineId_ ?? MachineIdDefaultValue; }
      set {
        machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "machine_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMachineId {
      get { return machineId_ != null; }
    }
    /// <summary>Clears the value of the "machine_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMachineId() {
      machineId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountInfoFacebook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountInfoFacebook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (MachineId != other.MachineId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (HasMachineId) hash ^= MachineId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccessToken) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccessToken) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (HasMachineId) {
        output.WriteRawTag(18);
        output.WriteString(MachineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (HasMachineId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountInfoFacebook other) {
      if (other == null) {
        return;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      if (other.HasMachineId) {
        MachineId = other.MachineId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            MachineId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
