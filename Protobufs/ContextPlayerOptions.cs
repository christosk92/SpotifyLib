// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: context_player_options.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spotify.Player.Proto {

  /// <summary>Holder for reflection information generated from context_player_options.proto</summary>
  public static partial class ContextPlayerOptionsReflection {

    #region Descriptor
    /// <summary>File descriptor for context_player_options.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContextPlayerOptionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxjb250ZXh0X3BsYXllcl9vcHRpb25zLnByb3RvEhRzcG90aWZ5LnBsYXll",
            "ci5wcm90byJlChRDb250ZXh0UGxheWVyT3B0aW9ucxIZChFzaHVmZmxpbmdf",
            "Y29udGV4dBgBIAEoCBIZChFyZXBlYXRpbmdfY29udGV4dBgCIAEoCBIXCg9y",
            "ZXBlYXRpbmdfdHJhY2sYAyABKAgibQocQ29udGV4dFBsYXllck9wdGlvbk92",
            "ZXJyaWRlcxIZChFzaHVmZmxpbmdfY29udGV4dBgBIAEoCBIZChFyZXBlYXRp",
            "bmdfY29udGV4dBgCIAEoCBIXCg9yZXBlYXRpbmdfdHJhY2sYAyABKAhCFwoT",
            "Y29tLnNwb3RpZnkuY29udGV4dEgC"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.Player.Proto.ContextPlayerOptions), global::Spotify.Player.Proto.ContextPlayerOptions.Parser, new[]{ "ShufflingContext", "RepeatingContext", "RepeatingTrack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.Player.Proto.ContextPlayerOptionOverrides), global::Spotify.Player.Proto.ContextPlayerOptionOverrides.Parser, new[]{ "ShufflingContext", "RepeatingContext", "RepeatingTrack" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ContextPlayerOptions : pb::IMessage<ContextPlayerOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextPlayerOptions> _parser = new pb::MessageParser<ContextPlayerOptions>(() => new ContextPlayerOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContextPlayerOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.Player.Proto.ContextPlayerOptionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextPlayerOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextPlayerOptions(ContextPlayerOptions other) : this() {
      _hasBits0 = other._hasBits0;
      shufflingContext_ = other.shufflingContext_;
      repeatingContext_ = other.repeatingContext_;
      repeatingTrack_ = other.repeatingTrack_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextPlayerOptions Clone() {
      return new ContextPlayerOptions(this);
    }

    /// <summary>Field number for the "shuffling_context" field.</summary>
    public const int ShufflingContextFieldNumber = 1;
    private readonly static bool ShufflingContextDefaultValue = false;

    private bool shufflingContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShufflingContext {
      get { if ((_hasBits0 & 1) != 0) { return shufflingContext_; } else { return ShufflingContextDefaultValue; } }
      set {
        _hasBits0 |= 1;
        shufflingContext_ = value;
      }
    }
    /// <summary>Gets whether the "shuffling_context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShufflingContext {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "shuffling_context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShufflingContext() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "repeating_context" field.</summary>
    public const int RepeatingContextFieldNumber = 2;
    private readonly static bool RepeatingContextDefaultValue = false;

    private bool repeatingContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RepeatingContext {
      get { if ((_hasBits0 & 2) != 0) { return repeatingContext_; } else { return RepeatingContextDefaultValue; } }
      set {
        _hasBits0 |= 2;
        repeatingContext_ = value;
      }
    }
    /// <summary>Gets whether the "repeating_context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRepeatingContext {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "repeating_context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRepeatingContext() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "repeating_track" field.</summary>
    public const int RepeatingTrackFieldNumber = 3;
    private readonly static bool RepeatingTrackDefaultValue = false;

    private bool repeatingTrack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RepeatingTrack {
      get { if ((_hasBits0 & 4) != 0) { return repeatingTrack_; } else { return RepeatingTrackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        repeatingTrack_ = value;
      }
    }
    /// <summary>Gets whether the "repeating_track" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRepeatingTrack {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "repeating_track" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRepeatingTrack() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContextPlayerOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContextPlayerOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShufflingContext != other.ShufflingContext) return false;
      if (RepeatingContext != other.RepeatingContext) return false;
      if (RepeatingTrack != other.RepeatingTrack) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasShufflingContext) hash ^= ShufflingContext.GetHashCode();
      if (HasRepeatingContext) hash ^= RepeatingContext.GetHashCode();
      if (HasRepeatingTrack) hash ^= RepeatingTrack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasShufflingContext) {
        output.WriteRawTag(8);
        output.WriteBool(ShufflingContext);
      }
      if (HasRepeatingContext) {
        output.WriteRawTag(16);
        output.WriteBool(RepeatingContext);
      }
      if (HasRepeatingTrack) {
        output.WriteRawTag(24);
        output.WriteBool(RepeatingTrack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasShufflingContext) {
        output.WriteRawTag(8);
        output.WriteBool(ShufflingContext);
      }
      if (HasRepeatingContext) {
        output.WriteRawTag(16);
        output.WriteBool(RepeatingContext);
      }
      if (HasRepeatingTrack) {
        output.WriteRawTag(24);
        output.WriteBool(RepeatingTrack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasShufflingContext) {
        size += 1 + 1;
      }
      if (HasRepeatingContext) {
        size += 1 + 1;
      }
      if (HasRepeatingTrack) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContextPlayerOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasShufflingContext) {
        ShufflingContext = other.ShufflingContext;
      }
      if (other.HasRepeatingContext) {
        RepeatingContext = other.RepeatingContext;
      }
      if (other.HasRepeatingTrack) {
        RepeatingTrack = other.RepeatingTrack;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShufflingContext = input.ReadBool();
            break;
          }
          case 16: {
            RepeatingContext = input.ReadBool();
            break;
          }
          case 24: {
            RepeatingTrack = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShufflingContext = input.ReadBool();
            break;
          }
          case 16: {
            RepeatingContext = input.ReadBool();
            break;
          }
          case 24: {
            RepeatingTrack = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ContextPlayerOptionOverrides : pb::IMessage<ContextPlayerOptionOverrides>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextPlayerOptionOverrides> _parser = new pb::MessageParser<ContextPlayerOptionOverrides>(() => new ContextPlayerOptionOverrides());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContextPlayerOptionOverrides> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.Player.Proto.ContextPlayerOptionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextPlayerOptionOverrides() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextPlayerOptionOverrides(ContextPlayerOptionOverrides other) : this() {
      _hasBits0 = other._hasBits0;
      shufflingContext_ = other.shufflingContext_;
      repeatingContext_ = other.repeatingContext_;
      repeatingTrack_ = other.repeatingTrack_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextPlayerOptionOverrides Clone() {
      return new ContextPlayerOptionOverrides(this);
    }

    /// <summary>Field number for the "shuffling_context" field.</summary>
    public const int ShufflingContextFieldNumber = 1;
    private readonly static bool ShufflingContextDefaultValue = false;

    private bool shufflingContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShufflingContext {
      get { if ((_hasBits0 & 1) != 0) { return shufflingContext_; } else { return ShufflingContextDefaultValue; } }
      set {
        _hasBits0 |= 1;
        shufflingContext_ = value;
      }
    }
    /// <summary>Gets whether the "shuffling_context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShufflingContext {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "shuffling_context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShufflingContext() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "repeating_context" field.</summary>
    public const int RepeatingContextFieldNumber = 2;
    private readonly static bool RepeatingContextDefaultValue = false;

    private bool repeatingContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RepeatingContext {
      get { if ((_hasBits0 & 2) != 0) { return repeatingContext_; } else { return RepeatingContextDefaultValue; } }
      set {
        _hasBits0 |= 2;
        repeatingContext_ = value;
      }
    }
    /// <summary>Gets whether the "repeating_context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRepeatingContext {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "repeating_context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRepeatingContext() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "repeating_track" field.</summary>
    public const int RepeatingTrackFieldNumber = 3;
    private readonly static bool RepeatingTrackDefaultValue = false;

    private bool repeatingTrack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RepeatingTrack {
      get { if ((_hasBits0 & 4) != 0) { return repeatingTrack_; } else { return RepeatingTrackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        repeatingTrack_ = value;
      }
    }
    /// <summary>Gets whether the "repeating_track" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRepeatingTrack {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "repeating_track" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRepeatingTrack() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContextPlayerOptionOverrides);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContextPlayerOptionOverrides other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShufflingContext != other.ShufflingContext) return false;
      if (RepeatingContext != other.RepeatingContext) return false;
      if (RepeatingTrack != other.RepeatingTrack) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasShufflingContext) hash ^= ShufflingContext.GetHashCode();
      if (HasRepeatingContext) hash ^= RepeatingContext.GetHashCode();
      if (HasRepeatingTrack) hash ^= RepeatingTrack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasShufflingContext) {
        output.WriteRawTag(8);
        output.WriteBool(ShufflingContext);
      }
      if (HasRepeatingContext) {
        output.WriteRawTag(16);
        output.WriteBool(RepeatingContext);
      }
      if (HasRepeatingTrack) {
        output.WriteRawTag(24);
        output.WriteBool(RepeatingTrack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasShufflingContext) {
        output.WriteRawTag(8);
        output.WriteBool(ShufflingContext);
      }
      if (HasRepeatingContext) {
        output.WriteRawTag(16);
        output.WriteBool(RepeatingContext);
      }
      if (HasRepeatingTrack) {
        output.WriteRawTag(24);
        output.WriteBool(RepeatingTrack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasShufflingContext) {
        size += 1 + 1;
      }
      if (HasRepeatingContext) {
        size += 1 + 1;
      }
      if (HasRepeatingTrack) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContextPlayerOptionOverrides other) {
      if (other == null) {
        return;
      }
      if (other.HasShufflingContext) {
        ShufflingContext = other.ShufflingContext;
      }
      if (other.HasRepeatingContext) {
        RepeatingContext = other.RepeatingContext;
      }
      if (other.HasRepeatingTrack) {
        RepeatingTrack = other.RepeatingTrack;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShufflingContext = input.ReadBool();
            break;
          }
          case 16: {
            RepeatingContext = input.ReadBool();
            break;
          }
          case 24: {
            RepeatingTrack = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShufflingContext = input.ReadBool();
            break;
          }
          case 16: {
            RepeatingContext = input.ReadBool();
            break;
          }
          case 24: {
            RepeatingTrack = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
