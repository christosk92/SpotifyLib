// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mercury.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Spotify {

  /// <summary>Holder for reflection information generated from mercury.proto</summary>
  public static partial class MercuryReflection {

    #region Descriptor
    /// <summary>File descriptor for mercury.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MercuryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXJjdXJ5LnByb3RvEgdzcG90aWZ5IkIKFk1lcmN1cnlNdWx0aUdldFJl",
            "cXVlc3QSKAoHcmVxdWVzdBgBIAMoCzIXLnNwb3RpZnkuTWVyY3VyeVJlcXVl",
            "c3QiPAoUTWVyY3VyeU11bHRpR2V0UmVwbHkSJAoFcmVwbHkYASADKAsyFS5z",
            "cG90aWZ5Lk1lcmN1cnlSZXBseSJPCg5NZXJjdXJ5UmVxdWVzdBILCgN1cmkY",
            "ASABKAkSFAoMY29udGVudF90eXBlGAIgASgJEgwKBGJvZHkYAyABKAwSDAoE",
            "ZXRhZxgEIAEoDCL1AQoMTWVyY3VyeVJlcGx5EhMKC3N0YXR1c19jb2RlGAEg",
            "ASgREhYKDnN0YXR1c19tZXNzYWdlGAIgASgJEjcKDGNhY2hlX3BvbGljeRgD",
            "IAEoDjIhLnNwb3RpZnkuTWVyY3VyeVJlcGx5LkNhY2hlUG9saWN5EgsKA3R0",
            "bBgEIAEoERIMCgRldGFnGAUgASgMEhQKDGNvbnRlbnRfdHlwZRgGIAEoCRIM",
            "CgRib2R5GAcgASgMIkAKC0NhY2hlUG9saWN5EgwKCENBQ0hFX05PEAESEQoN",
            "Q0FDSEVfUFJJVkFURRACEhAKDENBQ0hFX1BVQkxJQxADInkKBkhlYWRlchIL",
            "CgN1cmkYASABKAkSFAoMY29udGVudF90eXBlGAIgASgJEg4KBm1ldGhvZBgD",
            "IAEoCRITCgtzdGF0dXNfY29kZRgEIAEoERInCgt1c2VyX2ZpZWxkcxgGIAMo",
            "CzISLnNwb3RpZnkuVXNlckZpZWxkIicKCVVzZXJGaWVsZBILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAxCDQoLY29tLnNwb3RpZnk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.MercuryMultiGetRequest), global::Spotify.MercuryMultiGetRequest.Parser, new[]{ "Request" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.MercuryMultiGetReply), global::Spotify.MercuryMultiGetReply.Parser, new[]{ "Reply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.MercuryRequest), global::Spotify.MercuryRequest.Parser, new[]{ "Uri", "ContentType", "Body", "Etag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.MercuryReply), global::Spotify.MercuryReply.Parser, new[]{ "StatusCode", "StatusMessage", "CachePolicy", "Ttl", "Etag", "ContentType", "Body" }, null, new[]{ typeof(global::Spotify.MercuryReply.Types.CachePolicy) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.Header), global::Spotify.Header.Parser, new[]{ "Uri", "ContentType", "Method", "StatusCode", "UserFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Spotify.UserField), global::Spotify.UserField.Parser, new[]{ "Key", "Value" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MercuryMultiGetRequest : pb::IMessage<MercuryMultiGetRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MercuryMultiGetRequest> _parser = new pb::MessageParser<MercuryMultiGetRequest>(() => new MercuryMultiGetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MercuryMultiGetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.MercuryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryMultiGetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryMultiGetRequest(MercuryMultiGetRequest other) : this() {
      request_ = other.request_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryMultiGetRequest Clone() {
      return new MercuryMultiGetRequest(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spotify.MercuryRequest> _repeated_request_codec
        = pb::FieldCodec.ForMessage(10, global::Spotify.MercuryRequest.Parser);
    private readonly pbc::RepeatedField<global::Spotify.MercuryRequest> request_ = new pbc::RepeatedField<global::Spotify.MercuryRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spotify.MercuryRequest> Request {
      get { return request_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MercuryMultiGetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MercuryMultiGetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!request_.Equals(other.request_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= request_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      request_.WriteTo(output, _repeated_request_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      request_.WriteTo(ref output, _repeated_request_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += request_.CalculateSize(_repeated_request_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MercuryMultiGetRequest other) {
      if (other == null) {
        return;
      }
      request_.Add(other.request_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            request_.AddEntriesFrom(input, _repeated_request_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            request_.AddEntriesFrom(ref input, _repeated_request_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MercuryMultiGetReply : pb::IMessage<MercuryMultiGetReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MercuryMultiGetReply> _parser = new pb::MessageParser<MercuryMultiGetReply>(() => new MercuryMultiGetReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MercuryMultiGetReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.MercuryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryMultiGetReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryMultiGetReply(MercuryMultiGetReply other) : this() {
      reply_ = other.reply_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryMultiGetReply Clone() {
      return new MercuryMultiGetReply(this);
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Spotify.MercuryReply> _repeated_reply_codec
        = pb::FieldCodec.ForMessage(10, global::Spotify.MercuryReply.Parser);
    private readonly pbc::RepeatedField<global::Spotify.MercuryReply> reply_ = new pbc::RepeatedField<global::Spotify.MercuryReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spotify.MercuryReply> Reply {
      get { return reply_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MercuryMultiGetReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MercuryMultiGetReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reply_.Equals(other.reply_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reply_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reply_.WriteTo(output, _repeated_reply_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reply_.WriteTo(ref output, _repeated_reply_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reply_.CalculateSize(_repeated_reply_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MercuryMultiGetReply other) {
      if (other == null) {
        return;
      }
      reply_.Add(other.reply_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reply_.AddEntriesFrom(input, _repeated_reply_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reply_.AddEntriesFrom(ref input, _repeated_reply_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MercuryRequest : pb::IMessage<MercuryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MercuryRequest> _parser = new pb::MessageParser<MercuryRequest>(() => new MercuryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MercuryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.MercuryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryRequest(MercuryRequest other) : this() {
      uri_ = other.uri_;
      contentType_ = other.contentType_;
      body_ = other.body_;
      etag_ = other.etag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryRequest Clone() {
      return new MercuryRequest(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private readonly static string ContentTypeDefaultValue = "";

    private string contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_ ?? ContentTypeDefaultValue; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentType {
      get { return contentType_ != null; }
    }
    /// <summary>Clears the value of the "content_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentType() {
      contentType_ = null;
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    private readonly static pb::ByteString BodyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_ ?? BodyDefaultValue; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "body" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBody {
      get { return body_ != null; }
    }
    /// <summary>Clears the value of the "body" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      body_ = null;
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 4;
    private readonly static pb::ByteString EtagDefaultValue = pb::ByteString.Empty;

    private pb::ByteString etag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Etag {
      get { return etag_ ?? EtagDefaultValue; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "etag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEtag {
      get { return etag_ != null; }
    }
    /// <summary>Clears the value of the "etag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEtag() {
      etag_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MercuryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MercuryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (ContentType != other.ContentType) return false;
      if (Body != other.Body) return false;
      if (Etag != other.Etag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUri) hash ^= Uri.GetHashCode();
      if (HasContentType) hash ^= ContentType.GetHashCode();
      if (HasBody) hash ^= Body.GetHashCode();
      if (HasEtag) hash ^= Etag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (HasContentType) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (HasBody) {
        output.WriteRawTag(26);
        output.WriteBytes(Body);
      }
      if (HasEtag) {
        output.WriteRawTag(34);
        output.WriteBytes(Etag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (HasContentType) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (HasBody) {
        output.WriteRawTag(26);
        output.WriteBytes(Body);
      }
      if (HasEtag) {
        output.WriteRawTag(34);
        output.WriteBytes(Etag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (HasContentType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (HasBody) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (HasEtag) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Etag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MercuryRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      if (other.HasContentType) {
        ContentType = other.ContentType;
      }
      if (other.HasBody) {
        Body = other.Body;
      }
      if (other.HasEtag) {
        Etag = other.Etag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
          case 26: {
            Body = input.ReadBytes();
            break;
          }
          case 34: {
            Etag = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
          case 26: {
            Body = input.ReadBytes();
            break;
          }
          case 34: {
            Etag = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MercuryReply : pb::IMessage<MercuryReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MercuryReply> _parser = new pb::MessageParser<MercuryReply>(() => new MercuryReply());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MercuryReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.MercuryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryReply(MercuryReply other) : this() {
      _hasBits0 = other._hasBits0;
      statusCode_ = other.statusCode_;
      statusMessage_ = other.statusMessage_;
      cachePolicy_ = other.cachePolicy_;
      ttl_ = other.ttl_;
      etag_ = other.etag_;
      contentType_ = other.contentType_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MercuryReply Clone() {
      return new MercuryReply(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private readonly static int StatusCodeDefaultValue = 0;

    private int statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusCode {
      get { if ((_hasBits0 & 1) != 0) { return statusCode_; } else { return StatusCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        statusCode_ = value;
      }
    }
    /// <summary>Gets whether the "status_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatusCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 2;
    private readonly static string StatusMessageDefaultValue = "";

    private string statusMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_ ?? StatusMessageDefaultValue; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatusMessage {
      get { return statusMessage_ != null; }
    }
    /// <summary>Clears the value of the "status_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusMessage() {
      statusMessage_ = null;
    }

    /// <summary>Field number for the "cache_policy" field.</summary>
    public const int CachePolicyFieldNumber = 3;
    private readonly static global::Spotify.MercuryReply.Types.CachePolicy CachePolicyDefaultValue = global::Spotify.MercuryReply.Types.CachePolicy.CacheNo;

    private global::Spotify.MercuryReply.Types.CachePolicy cachePolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Spotify.MercuryReply.Types.CachePolicy CachePolicy {
      get { if ((_hasBits0 & 2) != 0) { return cachePolicy_; } else { return CachePolicyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cachePolicy_ = value;
      }
    }
    /// <summary>Gets whether the "cache_policy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCachePolicy {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cache_policy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCachePolicy() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 4;
    private readonly static int TtlDefaultValue = 0;

    private int ttl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ttl {
      get { if ((_hasBits0 & 4) != 0) { return ttl_; } else { return TtlDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ttl_ = value;
      }
    }
    /// <summary>Gets whether the "ttl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTtl {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ttl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTtl() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 5;
    private readonly static pb::ByteString EtagDefaultValue = pb::ByteString.Empty;

    private pb::ByteString etag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Etag {
      get { return etag_ ?? EtagDefaultValue; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "etag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEtag {
      get { return etag_ != null; }
    }
    /// <summary>Clears the value of the "etag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEtag() {
      etag_ = null;
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 6;
    private readonly static string ContentTypeDefaultValue = "";

    private string contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_ ?? ContentTypeDefaultValue; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentType {
      get { return contentType_ != null; }
    }
    /// <summary>Clears the value of the "content_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentType() {
      contentType_ = null;
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 7;
    private readonly static pb::ByteString BodyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_ ?? BodyDefaultValue; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "body" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBody {
      get { return body_ != null; }
    }
    /// <summary>Clears the value of the "body" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MercuryReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MercuryReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (CachePolicy != other.CachePolicy) return false;
      if (Ttl != other.Ttl) return false;
      if (Etag != other.Etag) return false;
      if (ContentType != other.ContentType) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatusCode) hash ^= StatusCode.GetHashCode();
      if (HasStatusMessage) hash ^= StatusMessage.GetHashCode();
      if (HasCachePolicy) hash ^= CachePolicy.GetHashCode();
      if (HasTtl) hash ^= Ttl.GetHashCode();
      if (HasEtag) hash ^= Etag.GetHashCode();
      if (HasContentType) hash ^= ContentType.GetHashCode();
      if (HasBody) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStatusCode) {
        output.WriteRawTag(8);
        output.WriteSInt32(StatusCode);
      }
      if (HasStatusMessage) {
        output.WriteRawTag(18);
        output.WriteString(StatusMessage);
      }
      if (HasCachePolicy) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CachePolicy);
      }
      if (HasTtl) {
        output.WriteRawTag(32);
        output.WriteSInt32(Ttl);
      }
      if (HasEtag) {
        output.WriteRawTag(42);
        output.WriteBytes(Etag);
      }
      if (HasContentType) {
        output.WriteRawTag(50);
        output.WriteString(ContentType);
      }
      if (HasBody) {
        output.WriteRawTag(58);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStatusCode) {
        output.WriteRawTag(8);
        output.WriteSInt32(StatusCode);
      }
      if (HasStatusMessage) {
        output.WriteRawTag(18);
        output.WriteString(StatusMessage);
      }
      if (HasCachePolicy) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CachePolicy);
      }
      if (HasTtl) {
        output.WriteRawTag(32);
        output.WriteSInt32(Ttl);
      }
      if (HasEtag) {
        output.WriteRawTag(42);
        output.WriteBytes(Etag);
      }
      if (HasContentType) {
        output.WriteRawTag(50);
        output.WriteString(ContentType);
      }
      if (HasBody) {
        output.WriteRawTag(58);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStatusCode) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(StatusCode);
      }
      if (HasStatusMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (HasCachePolicy) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CachePolicy);
      }
      if (HasTtl) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ttl);
      }
      if (HasEtag) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Etag);
      }
      if (HasContentType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (HasBody) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MercuryReply other) {
      if (other == null) {
        return;
      }
      if (other.HasStatusCode) {
        StatusCode = other.StatusCode;
      }
      if (other.HasStatusMessage) {
        StatusMessage = other.StatusMessage;
      }
      if (other.HasCachePolicy) {
        CachePolicy = other.CachePolicy;
      }
      if (other.HasTtl) {
        Ttl = other.Ttl;
      }
      if (other.HasEtag) {
        Etag = other.Etag;
      }
      if (other.HasContentType) {
        ContentType = other.ContentType;
      }
      if (other.HasBody) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadSInt32();
            break;
          }
          case 18: {
            StatusMessage = input.ReadString();
            break;
          }
          case 24: {
            CachePolicy = (global::Spotify.MercuryReply.Types.CachePolicy) input.ReadEnum();
            break;
          }
          case 32: {
            Ttl = input.ReadSInt32();
            break;
          }
          case 42: {
            Etag = input.ReadBytes();
            break;
          }
          case 50: {
            ContentType = input.ReadString();
            break;
          }
          case 58: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StatusCode = input.ReadSInt32();
            break;
          }
          case 18: {
            StatusMessage = input.ReadString();
            break;
          }
          case 24: {
            CachePolicy = (global::Spotify.MercuryReply.Types.CachePolicy) input.ReadEnum();
            break;
          }
          case 32: {
            Ttl = input.ReadSInt32();
            break;
          }
          case 42: {
            Etag = input.ReadBytes();
            break;
          }
          case 50: {
            ContentType = input.ReadString();
            break;
          }
          case 58: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MercuryReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CachePolicy {
        [pbr::OriginalName("CACHE_NO")] CacheNo = 1,
        [pbr::OriginalName("CACHE_PRIVATE")] CachePrivate = 2,
        [pbr::OriginalName("CACHE_PUBLIC")] CachePublic = 3,
      }

    }
    #endregion

  }

  public sealed partial class Header : pb::IMessage<Header>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.MercuryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header(Header other) : this() {
      _hasBits0 = other._hasBits0;
      uri_ = other.uri_;
      contentType_ = other.contentType_;
      method_ = other.method_;
      statusCode_ = other.statusCode_;
      userFields_ = other.userFields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private readonly static string UriDefaultValue = "";

    private string uri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_ ?? UriDefaultValue; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUri {
      get { return uri_ != null; }
    }
    /// <summary>Clears the value of the "uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUri() {
      uri_ = null;
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private readonly static string ContentTypeDefaultValue = "";

    private string contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_ ?? ContentTypeDefaultValue; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentType {
      get { return contentType_ != null; }
    }
    /// <summary>Clears the value of the "content_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentType() {
      contentType_ = null;
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 3;
    private readonly static string MethodDefaultValue = "";

    private string method_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_ ?? MethodDefaultValue; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "method" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMethod {
      get { return method_ != null; }
    }
    /// <summary>Clears the value of the "method" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMethod() {
      method_ = null;
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 4;
    private readonly static int StatusCodeDefaultValue = 0;

    private int statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusCode {
      get { if ((_hasBits0 & 1) != 0) { return statusCode_; } else { return StatusCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        statusCode_ = value;
      }
    }
    /// <summary>Gets whether the "status_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatusCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_fields" field.</summary>
    public const int UserFieldsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Spotify.UserField> _repeated_userFields_codec
        = pb::FieldCodec.ForMessage(50, global::Spotify.UserField.Parser);
    private readonly pbc::RepeatedField<global::Spotify.UserField> userFields_ = new pbc::RepeatedField<global::Spotify.UserField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Spotify.UserField> UserFields {
      get { return userFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (ContentType != other.ContentType) return false;
      if (Method != other.Method) return false;
      if (StatusCode != other.StatusCode) return false;
      if(!userFields_.Equals(other.userFields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUri) hash ^= Uri.GetHashCode();
      if (HasContentType) hash ^= ContentType.GetHashCode();
      if (HasMethod) hash ^= Method.GetHashCode();
      if (HasStatusCode) hash ^= StatusCode.GetHashCode();
      hash ^= userFields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (HasContentType) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (HasMethod) {
        output.WriteRawTag(26);
        output.WriteString(Method);
      }
      if (HasStatusCode) {
        output.WriteRawTag(32);
        output.WriteSInt32(StatusCode);
      }
      userFields_.WriteTo(output, _repeated_userFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (HasContentType) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (HasMethod) {
        output.WriteRawTag(26);
        output.WriteString(Method);
      }
      if (HasStatusCode) {
        output.WriteRawTag(32);
        output.WriteSInt32(StatusCode);
      }
      userFields_.WriteTo(ref output, _repeated_userFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (HasContentType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (HasMethod) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (HasStatusCode) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(StatusCode);
      }
      size += userFields_.CalculateSize(_repeated_userFields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.HasUri) {
        Uri = other.Uri;
      }
      if (other.HasContentType) {
        ContentType = other.ContentType;
      }
      if (other.HasMethod) {
        Method = other.Method;
      }
      if (other.HasStatusCode) {
        StatusCode = other.StatusCode;
      }
      userFields_.Add(other.userFields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
          case 26: {
            Method = input.ReadString();
            break;
          }
          case 32: {
            StatusCode = input.ReadSInt32();
            break;
          }
          case 50: {
            userFields_.AddEntriesFrom(input, _repeated_userFields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
          case 26: {
            Method = input.ReadString();
            break;
          }
          case 32: {
            StatusCode = input.ReadSInt32();
            break;
          }
          case 50: {
            userFields_.AddEntriesFrom(ref input, _repeated_userFields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserField : pb::IMessage<UserField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserField> _parser = new pb::MessageParser<UserField>(() => new UserField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Spotify.MercuryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserField(UserField other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserField Clone() {
      return new UserField(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private readonly static string KeyDefaultValue = "";

    private string key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static pb::ByteString ValueDefaultValue = pb::ByteString.Empty;

    private pb::ByteString value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserField other) {
      if (other == null) {
        return;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
